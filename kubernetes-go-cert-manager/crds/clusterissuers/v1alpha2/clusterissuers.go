// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
type ClusterIssuer struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	Metadata metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Desired state of the ClusterIssuer resource.
	Spec ClusterIssuerSpecPtrOutput `pulumi:"spec"`
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status ClusterIssuerStatusPtrOutput `pulumi:"status"`
}

// NewClusterIssuer registers a new resource with the given unique name, arguments, and options.
func NewClusterIssuer(ctx *pulumi.Context,
	name string, args *ClusterIssuerArgs, opts ...pulumi.ResourceOption) (*ClusterIssuer, error) {
	if args == nil {
		args = &ClusterIssuerArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("cert-manager.io/v1alpha2")
	args.Kind = pulumi.StringPtr("ClusterIssuer")
	var resource ClusterIssuer
	err := ctx.RegisterResource("kubernetes:cert-manager.io/v1alpha2:ClusterIssuer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterIssuer gets an existing ClusterIssuer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterIssuer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterIssuerState, opts ...pulumi.ResourceOption) (*ClusterIssuer, error) {
	var resource ClusterIssuer
	err := ctx.ReadResource("kubernetes:cert-manager.io/v1alpha2:ClusterIssuer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterIssuer resources.
type clusterIssuerState struct {
	ApiVersion *string `pulumi:"apiVersion"`
	Kind *string `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the ClusterIssuer resource.
	Spec *ClusterIssuerSpec `pulumi:"spec"`
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status *ClusterIssuerStatus `pulumi:"status"`
}

type ClusterIssuerState struct {
	ApiVersion pulumi.StringPtrInput
	Kind pulumi.StringPtrInput
	Metadata metav1.ObjectMetaPtrInput
	// Desired state of the ClusterIssuer resource.
	Spec ClusterIssuerSpecPtrInput
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status ClusterIssuerStatusPtrInput
}

func (ClusterIssuerState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterIssuerState)(nil)).Elem()
}

type clusterIssuerArgs struct {
	ApiVersion *string `pulumi:"apiVersion"`
	Kind *string `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the ClusterIssuer resource.
	Spec *ClusterIssuerSpec `pulumi:"spec"`
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status *ClusterIssuerStatus `pulumi:"status"`
}

// The set of arguments for constructing a ClusterIssuer resource.
type ClusterIssuerArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind pulumi.StringPtrInput
	Metadata metav1.ObjectMetaPtrInput
	// Desired state of the ClusterIssuer resource.
	Spec ClusterIssuerSpecPtrInput
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status ClusterIssuerStatusPtrInput
}

func (ClusterIssuerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterIssuerArgs)(nil)).Elem()
}

// A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
type ClusterIssuerType struct {
	ApiVersion *string `pulumi:"apiVersion"`
	Kind *string `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the ClusterIssuer resource.
	Spec *ClusterIssuerSpec `pulumi:"spec"`
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status *ClusterIssuerStatus `pulumi:"status"`
}

// ClusterIssuerTypeInput is an input type that accepts ClusterIssuerTypeArgs and ClusterIssuerTypeOutput values.
// You can construct a concrete instance of `ClusterIssuerTypeInput` via:
//
//          ClusterIssuerTypeArgs{...}
type ClusterIssuerTypeInput interface {
	pulumi.Input

	ToClusterIssuerTypeOutput() ClusterIssuerTypeOutput
	ToClusterIssuerTypeOutputWithContext(context.Context) ClusterIssuerTypeOutput
}

// A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
type ClusterIssuerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Desired state of the ClusterIssuer resource.
	Spec ClusterIssuerSpecPtrInput `pulumi:"spec"`
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status ClusterIssuerStatusPtrInput `pulumi:"status"`
}

func (ClusterIssuerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerType)(nil)).Elem()
}

func (i ClusterIssuerTypeArgs) ToClusterIssuerTypeOutput() ClusterIssuerTypeOutput {
	return i.ToClusterIssuerTypeOutputWithContext(context.Background())
}

func (i ClusterIssuerTypeArgs) ToClusterIssuerTypeOutputWithContext(ctx context.Context) ClusterIssuerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerTypeOutput)
}

// A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
type ClusterIssuerTypeOutput struct { *pulumi.OutputState }

func (ClusterIssuerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerType)(nil)).Elem()
}

func (o ClusterIssuerTypeOutput) ToClusterIssuerTypeOutput() ClusterIssuerTypeOutput {
	return o
}

func (o ClusterIssuerTypeOutput) ToClusterIssuerTypeOutputWithContext(ctx context.Context) ClusterIssuerTypeOutput {
	return o
}

func (o ClusterIssuerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func (v ClusterIssuerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Desired state of the ClusterIssuer resource.
func (o ClusterIssuerTypeOutput) Spec() ClusterIssuerSpecPtrOutput {
	return o.ApplyT(func (v ClusterIssuerType) *ClusterIssuerSpec { return v.Spec }).(ClusterIssuerSpecPtrOutput)
}

// Status of the ClusterIssuer. This is set and managed automatically.
func (o ClusterIssuerTypeOutput) Status() ClusterIssuerStatusPtrOutput {
	return o.ApplyT(func (v ClusterIssuerType) *ClusterIssuerStatus { return v.Status }).(ClusterIssuerStatusPtrOutput)
}

// Desired state of the ClusterIssuer resource.
type ClusterIssuerSpec struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme *ClusterIssuerSpecAcme `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca *ClusterIssuerSpecCa `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned *ClusterIssuerSpecSelfSigned `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault *ClusterIssuerSpecVault `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi *ClusterIssuerSpecVenafi `pulumi:"venafi"`
}

// ClusterIssuerSpecInput is an input type that accepts ClusterIssuerSpecArgs and ClusterIssuerSpecOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecInput` via:
//
//          ClusterIssuerSpecArgs{...}
type ClusterIssuerSpecInput interface {
	pulumi.Input

	ToClusterIssuerSpecOutput() ClusterIssuerSpecOutput
	ToClusterIssuerSpecOutputWithContext(context.Context) ClusterIssuerSpecOutput
}

// Desired state of the ClusterIssuer resource.
type ClusterIssuerSpecArgs struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme ClusterIssuerSpecAcmePtrInput `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca ClusterIssuerSpecCaPtrInput `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned ClusterIssuerSpecSelfSignedPtrInput `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault ClusterIssuerSpecVaultPtrInput `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi ClusterIssuerSpecVenafiPtrInput `pulumi:"venafi"`
}

func (ClusterIssuerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpec)(nil)).Elem()
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecOutput() ClusterIssuerSpecOutput {
	return i.ToClusterIssuerSpecOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecOutput)
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return i.ToClusterIssuerSpecPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecOutput).ToClusterIssuerSpecPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecPtrInput is an input type that accepts ClusterIssuerSpecArgs, ClusterIssuerSpecPtr and ClusterIssuerSpecPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecPtrInput` via:
//
//          ClusterIssuerSpecArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput
	ToClusterIssuerSpecPtrOutputWithContext(context.Context) ClusterIssuerSpecPtrOutput
}

type clusterIssuerSpecPtrType ClusterIssuerSpecArgs

func ClusterIssuerSpecPtr(v *ClusterIssuerSpecArgs) ClusterIssuerSpecPtrInput {	return (*clusterIssuerSpecPtrType)(v)
}

func (*clusterIssuerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpec)(nil)).Elem()
}

func (i *clusterIssuerSpecPtrType) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return i.ToClusterIssuerSpecPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecPtrType) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecPtrOutput)
}

// Desired state of the ClusterIssuer resource.
type ClusterIssuerSpecOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecOutput() ClusterIssuerSpecOutput {
	return o
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecOutput {
	return o
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return o.ToClusterIssuerSpecPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpec) *ClusterIssuerSpec {
		return &v
	}).(ClusterIssuerSpecPtrOutput)
}
// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o ClusterIssuerSpecOutput) Acme() ClusterIssuerSpecAcmePtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpec) *ClusterIssuerSpecAcme { return v.Acme }).(ClusterIssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o ClusterIssuerSpecOutput) Ca() ClusterIssuerSpecCaPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpec) *ClusterIssuerSpecCa { return v.Ca }).(ClusterIssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o ClusterIssuerSpecOutput) SelfSigned() ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpec) *ClusterIssuerSpecSelfSigned { return v.SelfSigned }).(ClusterIssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o ClusterIssuerSpecOutput) Vault() ClusterIssuerSpecVaultPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpec) *ClusterIssuerSpecVault { return v.Vault }).(ClusterIssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o ClusterIssuerSpecOutput) Venafi() ClusterIssuerSpecVenafiPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpec) *ClusterIssuerSpecVenafi { return v.Venafi }).(ClusterIssuerSpecVenafiPtrOutput)
}

type ClusterIssuerSpecPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecPtrOutput) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecPtrOutput) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecPtrOutput) Elem() ClusterIssuerSpecOutput {
	return o.ApplyT(func (v *ClusterIssuerSpec) ClusterIssuerSpec { return *v }).(ClusterIssuerSpecOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o ClusterIssuerSpecPtrOutput) Acme() ClusterIssuerSpecAcmePtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpec) *ClusterIssuerSpecAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(ClusterIssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o ClusterIssuerSpecPtrOutput) Ca() ClusterIssuerSpecCaPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpec) *ClusterIssuerSpecCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(ClusterIssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o ClusterIssuerSpecPtrOutput) SelfSigned() ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpec) *ClusterIssuerSpecSelfSigned {
		if v == nil {
			return nil
		}
		return v.SelfSigned
	}).(ClusterIssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o ClusterIssuerSpecPtrOutput) Vault() ClusterIssuerSpecVaultPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpec) *ClusterIssuerSpecVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(ClusterIssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o ClusterIssuerSpecPtrOutput) Venafi() ClusterIssuerSpecVenafiPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpec) *ClusterIssuerSpecVenafi {
		if v == nil {
			return nil
		}
		return v.Venafi
	}).(ClusterIssuerSpecVenafiPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type ClusterIssuerSpecAcme struct {
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email *string `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding *ClusterIssuerSpecAcmeExternalAccountBinding `pulumi:"externalAccountBinding"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef ClusterIssuerSpecAcmePrivateKeySecretRef `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server string `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify *bool `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers []ClusterIssuerSpecAcmeSolvers `pulumi:"solvers"`
}

// ClusterIssuerSpecAcmeInput is an input type that accepts ClusterIssuerSpecAcmeArgs and ClusterIssuerSpecAcmeOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeInput` via:
//
//          ClusterIssuerSpecAcmeArgs{...}
type ClusterIssuerSpecAcmeInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeOutput() ClusterIssuerSpecAcmeOutput
	ToClusterIssuerSpecAcmeOutputWithContext(context.Context) ClusterIssuerSpecAcmeOutput
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type ClusterIssuerSpecAcmeArgs struct {
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding ClusterIssuerSpecAcmeExternalAccountBindingPtrInput `pulumi:"externalAccountBinding"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef ClusterIssuerSpecAcmePrivateKeySecretRefInput `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server pulumi.StringInput `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify pulumi.BoolPtrInput `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers ClusterIssuerSpecAcmeSolversArrayInput `pulumi:"solvers"`
}

func (ClusterIssuerSpecAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcme)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmeOutput() ClusterIssuerSpecAcmeOutput {
	return i.ToClusterIssuerSpecAcmeOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmeOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeOutput)
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return i.ToClusterIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeOutput).ToClusterIssuerSpecAcmePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmePtrInput is an input type that accepts ClusterIssuerSpecAcmeArgs, ClusterIssuerSpecAcmePtr and ClusterIssuerSpecAcmePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmePtrInput` via:
//
//          ClusterIssuerSpecAcmeArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput
	ToClusterIssuerSpecAcmePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmePtrOutput
}

type clusterIssuerSpecAcmePtrType ClusterIssuerSpecAcmeArgs

func ClusterIssuerSpecAcmePtr(v *ClusterIssuerSpecAcmeArgs) ClusterIssuerSpecAcmePtrInput {	return (*clusterIssuerSpecAcmePtrType)(v)
}

func (*clusterIssuerSpecAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcme)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmePtrType) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return i.ToClusterIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmePtrType) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type ClusterIssuerSpecAcmeOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcme)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmeOutput() ClusterIssuerSpecAcmeOutput {
	return o
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmeOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeOutput {
	return o
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return o.ToClusterIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) *ClusterIssuerSpecAcme {
		return &v
	}).(ClusterIssuerSpecAcmePtrOutput)
}
// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o ClusterIssuerSpecAcmeOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcme) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o ClusterIssuerSpecAcmeOutput) ExternalAccountBinding() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcme) *ClusterIssuerSpecAcmeExternalAccountBinding { return v.ExternalAccountBinding }).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o ClusterIssuerSpecAcmeOutput) PrivateKeySecretRef() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcme) ClusterIssuerSpecAcmePrivateKeySecretRef { return v.PrivateKeySecretRef }).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o ClusterIssuerSpecAcmeOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcme) string { return v.Server }).(pulumi.StringOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o ClusterIssuerSpecAcmeOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcme) *bool { return v.SkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o ClusterIssuerSpecAcmeOutput) Solvers() ClusterIssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcme) []ClusterIssuerSpecAcmeSolvers { return v.Solvers }).(ClusterIssuerSpecAcmeSolversArrayOutput)
}

type ClusterIssuerSpecAcmePtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcme)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmePtrOutput) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePtrOutput) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePtrOutput) Elem() ClusterIssuerSpecAcmeOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcme) ClusterIssuerSpecAcme { return *v }).(ClusterIssuerSpecAcmeOutput)
}

// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o ClusterIssuerSpecAcmePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o ClusterIssuerSpecAcmePtrOutput) ExternalAccountBinding() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcme) *ClusterIssuerSpecAcmeExternalAccountBinding {
		if v == nil {
			return nil
		}
		return v.ExternalAccountBinding
	}).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o ClusterIssuerSpecAcmePtrOutput) PrivateKeySecretRef() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcme) *ClusterIssuerSpecAcmePrivateKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.PrivateKeySecretRef
	}).(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o ClusterIssuerSpecAcmePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o ClusterIssuerSpecAcmePtrOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.SkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o ClusterIssuerSpecAcmePtrOutput) Solvers() ClusterIssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcme) []ClusterIssuerSpecAcmeSolvers {
		if v == nil {
			return nil
		}
		return v.Solvers
	}).(ClusterIssuerSpecAcmeSolversArrayOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type ClusterIssuerSpecAcmeExternalAccountBinding struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID string `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef `pulumi:"keySecretRef"`
}

// ClusterIssuerSpecAcmeExternalAccountBindingInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingArgs and ClusterIssuerSpecAcmeExternalAccountBindingOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingArgs{...}
type ClusterIssuerSpecAcmeExternalAccountBindingInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingOutput() ClusterIssuerSpecAcmeExternalAccountBindingOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingOutput
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type ClusterIssuerSpecAcmeExternalAccountBindingArgs struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID pulumi.StringInput `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput `pulumi:"keySecretRef"`
}

func (ClusterIssuerSpecAcmeExternalAccountBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingOutput() ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingOutput)
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingOutput).ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeExternalAccountBindingPtrInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingArgs, ClusterIssuerSpecAcmeExternalAccountBindingPtr and ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingPtrInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeExternalAccountBindingPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput
}

type clusterIssuerSpecAcmeExternalAccountBindingPtrType ClusterIssuerSpecAcmeExternalAccountBindingArgs

func ClusterIssuerSpecAcmeExternalAccountBindingPtr(v *ClusterIssuerSpecAcmeExternalAccountBindingArgs) ClusterIssuerSpecAcmeExternalAccountBindingPtrInput {	return (*clusterIssuerSpecAcmeExternalAccountBindingPtrType)(v)
}

func (*clusterIssuerSpecAcmeExternalAccountBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type ClusterIssuerSpecAcmeExternalAccountBindingOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingOutput() ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBinding) *ClusterIssuerSpecAcmeExternalAccountBinding {
		return &v
	}).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}
// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeExternalAccountBinding) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) KeyID() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeExternalAccountBinding) string { return v.KeyID }).(pulumi.StringOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) KeySecretRef() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeExternalAccountBinding) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef { return v.KeySecretRef }).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

type ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) Elem() ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeExternalAccountBinding) ClusterIssuerSpecAcmeExternalAccountBinding { return *v }).(ClusterIssuerSpecAcmeExternalAccountBindingOutput)
}

// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) KeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyID
	}).(pulumi.StringPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) KeySecretRef() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeExternalAccountBinding) *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.KeySecretRef
	}).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs and ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput).ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs, ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtr and ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs

func ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtr(v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput {	return (*clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef { return *v }).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type ClusterIssuerSpecAcmePrivateKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmePrivateKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmePrivateKeySecretRefArgs and ClusterIssuerSpecAcmePrivateKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmePrivateKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmePrivateKeySecretRefArgs{...}
type ClusterIssuerSpecAcmePrivateKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmePrivateKeySecretRefOutput() ClusterIssuerSpecAcmePrivateKeySecretRefOutput
	ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefOutput
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type ClusterIssuerSpecAcmePrivateKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefOutput() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput).ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmePrivateKeySecretRefArgs, ClusterIssuerSpecAcmePrivateKeySecretRefPtr and ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmePrivateKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmePrivateKeySecretRefPtrType ClusterIssuerSpecAcmePrivateKeySecretRefArgs

func ClusterIssuerSpecAcmePrivateKeySecretRefPtr(v *ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput {	return (*clusterIssuerSpecAcmePrivateKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmePrivateKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmePrivateKeySecretRefPtrType) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmePrivateKeySecretRefPtrType) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type ClusterIssuerSpecAcmePrivateKeySecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefOutput() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmePrivateKeySecretRef) *ClusterIssuerSpecAcmePrivateKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmePrivateKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmePrivateKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmePrivateKeySecretRef) ClusterIssuerSpecAcmePrivateKeySecretRef { return *v }).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type ClusterIssuerSpecAcmeSolvers struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 *ClusterIssuerSpecAcmeSolversDns01 `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 *ClusterIssuerSpecAcmeSolversHttp01 `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector *ClusterIssuerSpecAcmeSolversSelector `pulumi:"selector"`
}

// ClusterIssuerSpecAcmeSolversInput is an input type that accepts ClusterIssuerSpecAcmeSolversArgs and ClusterIssuerSpecAcmeSolversOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversInput` via:
//
//          ClusterIssuerSpecAcmeSolversArgs{...}
type ClusterIssuerSpecAcmeSolversInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversOutput() ClusterIssuerSpecAcmeSolversOutput
	ToClusterIssuerSpecAcmeSolversOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversOutput
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type ClusterIssuerSpecAcmeSolversArgs struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 ClusterIssuerSpecAcmeSolversDns01PtrInput `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 ClusterIssuerSpecAcmeSolversHttp01PtrInput `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector ClusterIssuerSpecAcmeSolversSelectorPtrInput `pulumi:"selector"`
}

func (ClusterIssuerSpecAcmeSolversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversArgs) ToClusterIssuerSpecAcmeSolversOutput() ClusterIssuerSpecAcmeSolversOutput {
	return i.ToClusterIssuerSpecAcmeSolversOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversArgs) ToClusterIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversOutput)
}

// ClusterIssuerSpecAcmeSolversArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversArray and ClusterIssuerSpecAcmeSolversArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversArray{ ClusterIssuerSpecAcmeSolversArgs{...} }
type ClusterIssuerSpecAcmeSolversArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversArrayOutput() ClusterIssuerSpecAcmeSolversArrayOutput
	ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversArrayOutput
}

type ClusterIssuerSpecAcmeSolversArray []ClusterIssuerSpecAcmeSolversInput

func (ClusterIssuerSpecAcmeSolversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversArray) ToClusterIssuerSpecAcmeSolversArrayOutput() ClusterIssuerSpecAcmeSolversArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversArray) ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversArrayOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type ClusterIssuerSpecAcmeSolversOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversOutput) ToClusterIssuerSpecAcmeSolversOutput() ClusterIssuerSpecAcmeSolversOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversOutput) ToClusterIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversOutput {
	return o
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
func (o ClusterIssuerSpecAcmeSolversOutput) Dns01() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolvers) *ClusterIssuerSpecAcmeSolversDns01 { return v.Dns01 }).(ClusterIssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
func (o ClusterIssuerSpecAcmeSolversOutput) Http01() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolvers) *ClusterIssuerSpecAcmeSolversHttp01 { return v.Http01 }).(ClusterIssuerSpecAcmeSolversHttp01PtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
func (o ClusterIssuerSpecAcmeSolversOutput) Selector() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolvers) *ClusterIssuerSpecAcmeSolversSelector { return v.Selector }).(ClusterIssuerSpecAcmeSolversSelectorPtrOutput)
}

type ClusterIssuerSpecAcmeSolversArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversArrayOutput) ToClusterIssuerSpecAcmeSolversArrayOutput() ClusterIssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversArrayOutput) ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolvers {
		return vs[0].([]ClusterIssuerSpecAcmeSolvers)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type ClusterIssuerSpecAcmeSolversDns01 struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns *ClusterIssuerSpecAcmeSolversDns01Acmedns `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai *ClusterIssuerSpecAcmeSolversDns01Akamai `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns *ClusterIssuerSpecAcmeSolversDns01Azuredns `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns *ClusterIssuerSpecAcmeSolversDns01Clouddns `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare *ClusterIssuerSpecAcmeSolversDns01Cloudflare `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy *string `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean *ClusterIssuerSpecAcmeSolversDns01Digitalocean `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 *ClusterIssuerSpecAcmeSolversDns01Rfc2136 `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 *ClusterIssuerSpecAcmeSolversDns01Route53 `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook *ClusterIssuerSpecAcmeSolversDns01Webhook `pulumi:"webhook"`
}

// ClusterIssuerSpecAcmeSolversDns01Input is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Args and ClusterIssuerSpecAcmeSolversDns01Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Input` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Args{...}
type ClusterIssuerSpecAcmeSolversDns01Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Output() ClusterIssuerSpecAcmeSolversDns01Output
	ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type ClusterIssuerSpecAcmeSolversDns01Args struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy pulumi.StringPtrInput `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 ClusterIssuerSpecAcmeSolversDns01Route53PtrInput `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput `pulumi:"webhook"`
}

func (ClusterIssuerSpecAcmeSolversDns01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01Output() ClusterIssuerSpecAcmeSolversDns01Output {
	return i.ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Output)
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Output).ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Args, ClusterIssuerSpecAcmeSolversDns01Ptr and ClusterIssuerSpecAcmeSolversDns01PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput
	ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput
}

type clusterIssuerSpecAcmeSolversDns01PtrType ClusterIssuerSpecAcmeSolversDns01Args

func ClusterIssuerSpecAcmeSolversDns01Ptr(v *ClusterIssuerSpecAcmeSolversDns01Args) ClusterIssuerSpecAcmeSolversDns01PtrInput {	return (*clusterIssuerSpecAcmeSolversDns01PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01PtrType) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01PtrType) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type ClusterIssuerSpecAcmeSolversDns01Output struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01Output() ClusterIssuerSpecAcmeSolversDns01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01PtrOutput)
}
// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Acmedns() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Acmedns { return v.Acmedns }).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Akamai() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Akamai { return v.Akamai }).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Azuredns() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Azuredns { return v.Azuredns }).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Clouddns() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Clouddns { return v.Clouddns }).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Cloudflare() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Cloudflare { return v.Cloudflare }).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o ClusterIssuerSpecAcmeSolversDns01Output) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *string { return v.CnameStrategy }).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Digitalocean() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Digitalocean { return v.Digitalocean }).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Rfc2136() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Rfc2136 { return v.Rfc2136 }).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Route53() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Route53 { return v.Route53 }).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Webhook() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Webhook { return v.Webhook }).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01PtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Output {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) ClusterIssuerSpecAcmeSolversDns01 { return *v }).(ClusterIssuerSpecAcmeSolversDns01Output)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Acmedns() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Acmedns {
		if v == nil {
			return nil
		}
		return v.Acmedns
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Akamai() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Akamai {
		if v == nil {
			return nil
		}
		return v.Akamai
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Azuredns() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Azuredns {
		if v == nil {
			return nil
		}
		return v.Azuredns
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Clouddns() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Clouddns {
		if v == nil {
			return nil
		}
		return v.Clouddns
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Cloudflare() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Cloudflare {
		if v == nil {
			return nil
		}
		return v.Cloudflare
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *string {
		if v == nil {
			return nil
		}
		return v.CnameStrategy
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Digitalocean() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Digitalocean {
		if v == nil {
			return nil
		}
		return v.Digitalocean
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Rfc2136() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Rfc2136 {
		if v == nil {
			return nil
		}
		return v.Rfc2136
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Route53() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Route53 {
		if v == nil {
			return nil
		}
		return v.Route53
	}).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Webhook() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Webhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Acmedns struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef `pulumi:"accountSecretRef"`
	Host string `pulumi:"host"`
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsArgs and ClusterIssuerSpecAcmeSolversDns01AcmednsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AcmednsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsOutput
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AcmednsArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput `pulumi:"accountSecretRef"`
	Host pulumi.StringInput `pulumi:"host"`
}

func (ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput).ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsArgs, ClusterIssuerSpecAcmeSolversDns01AcmednsPtr and ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AcmednsPtrType ClusterIssuerSpecAcmeSolversDns01AcmednsArgs

func ClusterIssuerSpecAcmeSolversDns01AcmednsPtr(v *ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AcmednsPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AcmednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AcmednsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Acmedns) *ClusterIssuerSpecAcmeSolversDns01Acmedns {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}
// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) AccountSecretRef() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Acmedns) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef { return v.AccountSecretRef }).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Acmedns) string { return v.Host }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Acmedns) ClusterIssuerSpecAcmeSolversDns01Acmedns { return *v }).(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) AccountSecretRef() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Acmedns) *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccountSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Acmedns) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Akamai struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain string `pulumi:"serviceConsumerDomain"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiOutput
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AkamaiArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain pulumi.StringInput `pulumi:"serviceConsumerDomain"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AkamaiPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AkamaiOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01Akamai {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}
// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) AccessTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef { return v.AccessTokenSecretRef }).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef { return v.ClientSecretSecretRef }).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ClientTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef { return v.ClientTokenSecretRef }).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ServiceConsumerDomain() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Akamai) string { return v.ServiceConsumerDomain }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01Akamai { return *v }).(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) AccessTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ServiceConsumerDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Akamai) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceConsumerDomain
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Azuredns struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID *string `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	Environment *string `pulumi:"environment"`
	HostedZoneName *string `pulumi:"hostedZoneName"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	SubscriptionID string `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID *string `pulumi:"tenantID"`
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsArgs and ClusterIssuerSpecAcmeSolversDns01AzurednsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AzurednsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsOutput
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AzurednsArgs struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID pulumi.StringPtrInput `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput `pulumi:"clientSecretSecretRef"`
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	SubscriptionID pulumi.StringInput `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput).ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsArgs, ClusterIssuerSpecAcmeSolversDns01AzurednsPtr and ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AzurednsPtrType ClusterIssuerSpecAcmeSolversDns01AzurednsArgs

func ClusterIssuerSpecAcmeSolversDns01AzurednsPtr(v *ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AzurednsPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AzurednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AzurednsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) *ClusterIssuerSpecAcmeSolversDns01Azuredns {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}
// if both this and ClientSecret are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.ClientID }).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Azuredns) *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef { return v.ClientSecretSecretRef }).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Azuredns) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) SubscriptionID() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Azuredns) string { return v.SubscriptionID }).(pulumi.StringOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) ClusterIssuerSpecAcmeSolversDns01Azuredns { return *v }).(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput)
}

// if both this and ClientSecret are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.ClientID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) SubscriptionID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionID
	}).(pulumi.StringPtrOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
}

// if both this and ClientID are left unset MSI will be used
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Clouddns struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName *string `pulumi:"hostedZoneName"`
	Project string `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef `pulumi:"serviceAccountSecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs and ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs{...}
type ClusterIssuerSpecAcmeSolversDns01ClouddnsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	Project pulumi.StringInput `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput `pulumi:"serviceAccountSecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput).ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs, ClusterIssuerSpecAcmeSolversDns01ClouddnsPtr and ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs

func ClusterIssuerSpecAcmeSolversDns01ClouddnsPtr(v *ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Clouddns) *ClusterIssuerSpecAcmeSolversDns01Clouddns {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}
// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Clouddns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Clouddns) string { return v.Project }).(pulumi.StringOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ServiceAccountSecretRef() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Clouddns) *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef { return v.ServiceAccountSecretRef }).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Clouddns) ClusterIssuerSpecAcmeSolversDns01Clouddns { return *v }).(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ServiceAccountSecretRef() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Clouddns) *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Cloudflare struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email *string `pulumi:"email"`
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareArgs and ClusterIssuerSpecAcmeSolversDns01CloudflareOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareArgs{...}
type ClusterIssuerSpecAcmeSolversDns01CloudflareInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareOutput
}

// Use the Cloudflare API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01CloudflareArgs struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email pulumi.StringPtrInput `pulumi:"email"`
}

func (ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput).ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareArgs, ClusterIssuerSpecAcmeSolversDns01CloudflarePtr and ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput
}

type clusterIssuerSpecAcmeSolversDns01CloudflarePtrType ClusterIssuerSpecAcmeSolversDns01CloudflareArgs

func ClusterIssuerSpecAcmeSolversDns01CloudflarePtr(v *ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput {	return (*clusterIssuerSpecAcmeSolversDns01CloudflarePtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01CloudflarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflarePtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflarePtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01CloudflareOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01Cloudflare {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}
// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ApiKeySecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef { return v.ApiKeySecretRef }).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ApiTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef { return v.ApiTokenSecretRef }).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *string { return v.Email }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) ClusterIssuerSpecAcmeSolversDns01Cloudflare { return *v }).(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiKeySecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.ApiKeySecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.ApiTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs and ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs, ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr and ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// API token used to authenticate with Cloudflare.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
}

// API token used to authenticate with Cloudflare.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Digitalocean struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef `pulumi:"tokenSecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs and ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput `pulumi:"tokenSecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput).ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs, ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtr and ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs

func ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtr(v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Digitalocean) *ClusterIssuerSpecAcmeSolversDns01Digitalocean {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}
// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) TokenSecretRef() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Digitalocean) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef { return v.TokenSecretRef }).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

type ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Digitalocean) ClusterIssuerSpecAcmeSolversDns01Digitalocean { return *v }).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) TokenSecretRef() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Digitalocean) *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.TokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136 struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver string `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm *string `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName *string `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef `pulumi:"tsigSecretSecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136Input is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136Args and ClusterIssuerSpecAcmeSolversDns01Rfc2136Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136Input` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136Args{...}
type ClusterIssuerSpecAcmeSolversDns01Rfc2136Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136Output() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136Output
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136Args struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver pulumi.StringInput `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm pulumi.StringPtrInput `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName pulumi.StringPtrInput `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput `pulumi:"tsigSecretSecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136Output() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output)
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output).ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136Args, ClusterIssuerSpecAcmeSolversDns01Rfc2136Ptr and ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType ClusterIssuerSpecAcmeSolversDns01Rfc2136Args

func ClusterIssuerSpecAcmeSolversDns01Rfc2136Ptr(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput {	return (*clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136Output struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136Output() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *ClusterIssuerSpecAcmeSolversDns01Rfc2136 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}
// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) Nameserver() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Rfc2136) string { return v.Nameserver }).(pulumi.StringOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigAlgorithm }).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigKeyName }).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) TsigSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef { return v.TsigSecretSecretRef }).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) ClusterIssuerSpecAcmeSolversDns01Rfc2136 { return *v }).(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output)
}

// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Nameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return &v.Nameserver
	}).(pulumi.StringPtrOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigKeyName
	}).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.TsigSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Route53 struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID *string `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID *string `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region string `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role *string `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01Route53Input is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53Args and ClusterIssuerSpecAcmeSolversDns01Route53Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53Input` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53Args{...}
type ClusterIssuerSpecAcmeSolversDns01Route53Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53Output() ClusterIssuerSpecAcmeSolversDns01Route53Output
	ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53Output
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Route53Args struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID pulumi.StringPtrInput `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID pulumi.StringPtrInput `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region pulumi.StringInput `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01Route53Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53Output() ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53Output)
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53Output).ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Route53PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53Args, ClusterIssuerSpecAcmeSolversDns01Route53Ptr and ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Route53PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Route53PtrType ClusterIssuerSpecAcmeSolversDns01Route53Args

func ClusterIssuerSpecAcmeSolversDns01Route53Ptr(v *ClusterIssuerSpecAcmeSolversDns01Route53Args) ClusterIssuerSpecAcmeSolversDns01Route53PtrInput {	return (*clusterIssuerSpecAcmeSolversDns01Route53PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Route53PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53PtrType) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53PtrType) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Route53Output struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53Output() ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53) *ClusterIssuerSpecAcmeSolversDns01Route53 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}
// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Route53) *string { return v.AccessKeyID }).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Route53) *string { return v.HostedZoneID }).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) Region() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Route53) string { return v.Region }).(pulumi.StringOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Route53) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) SecretAccessKeySecretRef() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Route53) *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef { return v.SecretAccessKeySecretRef }).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53) ClusterIssuerSpecAcmeSolversDns01Route53 { return *v }).(ClusterIssuerSpecAcmeSolversDns01Route53Output)
}

// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyID
	}).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneID
	}).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) SecretAccessKeySecretRef() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53) *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs and ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs, ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr and ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef { return *v }).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Webhook struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config map[string]interface{} `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName string `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName string `pulumi:"solverName"`
}

// ClusterIssuerSpecAcmeSolversDns01WebhookInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01WebhookArgs and ClusterIssuerSpecAcmeSolversDns01WebhookOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01WebhookInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01WebhookArgs{...}
type ClusterIssuerSpecAcmeSolversDns01WebhookInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01WebhookOutput() ClusterIssuerSpecAcmeSolversDns01WebhookOutput
	ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookOutput
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01WebhookArgs struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config pulumi.MapInput `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName pulumi.StringInput `pulumi:"solverName"`
}

func (ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookOutput() ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01WebhookOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01WebhookOutput).ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01WebhookArgs, ClusterIssuerSpecAcmeSolversDns01WebhookPtr and ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01WebhookArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01WebhookPtrType ClusterIssuerSpecAcmeSolversDns01WebhookArgs

func ClusterIssuerSpecAcmeSolversDns01WebhookPtr(v *ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput {	return (*clusterIssuerSpecAcmeSolversDns01WebhookPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01WebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01WebhookPtrType) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01WebhookPtrType) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01WebhookOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookOutput() ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Webhook) *ClusterIssuerSpecAcmeSolversDns01Webhook {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}
// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Webhook) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Webhook) string { return v.GroupName }).(pulumi.StringOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) SolverName() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversDns01Webhook) string { return v.SolverName }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Webhook) ClusterIssuerSpecAcmeSolversDns01Webhook { return *v }).(ClusterIssuerSpecAcmeSolversDns01WebhookOutput)
}

// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Webhook) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.GroupName
	}).(pulumi.StringPtrOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) SolverName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.SolverName
	}).(pulumi.StringPtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type ClusterIssuerSpecAcmeSolversHttp01 struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress *ClusterIssuerSpecAcmeSolversHttp01Ingress `pulumi:"ingress"`
}

// ClusterIssuerSpecAcmeSolversHttp01Input is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01Args and ClusterIssuerSpecAcmeSolversHttp01Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01Input` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01Args{...}
type ClusterIssuerSpecAcmeSolversHttp01Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01Output() ClusterIssuerSpecAcmeSolversHttp01Output
	ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type ClusterIssuerSpecAcmeSolversHttp01Args struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput `pulumi:"ingress"`
}

func (ClusterIssuerSpecAcmeSolversHttp01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01Output() ClusterIssuerSpecAcmeSolversHttp01Output {
	return i.ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01Output)
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01Output).ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01Args, ClusterIssuerSpecAcmeSolversHttp01Ptr and ClusterIssuerSpecAcmeSolversHttp01PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01PtrType ClusterIssuerSpecAcmeSolversHttp01Args

func ClusterIssuerSpecAcmeSolversHttp01Ptr(v *ClusterIssuerSpecAcmeSolversHttp01Args) ClusterIssuerSpecAcmeSolversHttp01PtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01PtrType) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01PtrType) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type ClusterIssuerSpecAcmeSolversHttp01Output struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01Output() ClusterIssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01) *ClusterIssuerSpecAcmeSolversHttp01 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01PtrOutput)
}
// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o ClusterIssuerSpecAcmeSolversHttp01Output) Ingress() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01) *ClusterIssuerSpecAcmeSolversHttp01Ingress { return v.Ingress }).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01PtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01Output {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01) ClusterIssuerSpecAcmeSolversHttp01 { return *v }).(ClusterIssuerSpecAcmeSolversHttp01Output)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) Ingress() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01) *ClusterIssuerSpecAcmeSolversHttp01Ingress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type ClusterIssuerSpecAcmeSolversHttp01Ingress struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class *string `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name *string `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType *string `pulumi:"serviceType"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressArgs and ClusterIssuerSpecAcmeSolversHttp01IngressOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressOutput() ClusterIssuerSpecAcmeSolversHttp01IngressOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressOutput
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type ClusterIssuerSpecAcmeSolversHttp01IngressArgs struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressOutput() ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPtrType ClusterIssuerSpecAcmeSolversHttp01IngressArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type ClusterIssuerSpecAcmeSolversHttp01IngressOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressOutput() ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01Ingress {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}
// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01Ingress) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) IngressTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate { return v.IngressTemplate }).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01Ingress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) PodTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate { return v.PodTemplate }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01Ingress) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01Ingress) ClusterIssuerSpecAcmeSolversHttp01Ingress { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressOutput)
}

// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v == nil {
			return nil
		}
		return v.IngressTemplate
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) PodTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata `pulumi:"metadata"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput `pulumi:"metadata"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs, ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}
// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata { return v.Metadata }).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels map[string]string `pulumi:"labels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs, ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}
// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec `pulumi:"spec"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput `pulumi:"spec"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}
// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata { return v.Metadata }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Spec() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec { return v.Spec }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Spec() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels map[string]string `pulumi:"labels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}
// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec struct {
	// If specified, the pod's scheduling constraints
	Affinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// If specified, the pod's tolerations.
	Tolerations []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations `pulumi:"tolerations"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs struct {
	// If specified, the pod's scheduling constraints
	Affinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// If specified, the pod's tolerations.
	Tolerations ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput `pulumi:"tolerations"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}
// If specified, the pod's scheduling constraints
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Affinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity { return v.Affinity }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// If specified, the pod's tolerations.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Tolerations() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations { return v.Tolerations }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

// If specified, the pod's scheduling constraints
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Affinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's tolerations.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Tolerations() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// If specified, the pod's scheduling constraints
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
}

// If specified, the pod's scheduling constraints
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's scheduling constraints
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}
// Describes node affinity scheduling rules for the pod.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) NodeAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity { return v.NodeAffinity }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity { return v.PodAffinity }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAntiAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity { return v.PodAntiAffinity }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) NodeAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAntiAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}
// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution { return v.PreferredDuringSchedulingIgnoredDuringExecution }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution { return v.RequiredDuringSchedulingIgnoredDuringExecution }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference { return v.Preference }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int { return v.Weight }).(pulumi.IntOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions { return v.MatchExpressions }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields { return v.MatchFields }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}
// Required. A list of node selector terms. The terms are ORed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms { return v.NodeSelectorTerms }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions { return v.MatchExpressions }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields { return v.MatchFields }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}
// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution { return v.PreferredDuringSchedulingIgnoredDuringExecution }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution { return v.RequiredDuringSchedulingIgnoredDuringExecution }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm { return v.PodAffinityTerm }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int { return v.Weight }).(pulumi.IntOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return v.LabelSelector }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string { return v.TopologyKey }).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions { return v.MatchExpressions }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return v.LabelSelector }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string { return v.TopologyKey }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions { return v.MatchExpressions }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}
// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution { return v.PreferredDuringSchedulingIgnoredDuringExecution }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution { return v.RequiredDuringSchedulingIgnoredDuringExecution }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm { return v.PodAffinityTerm }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int { return v.Weight }).(pulumi.IntOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return v.LabelSelector }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string { return v.TopologyKey }).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions { return v.MatchExpressions }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return v.LabelSelector }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string { return v.TopologyKey }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions { return v.MatchExpressions }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return *v }).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type ClusterIssuerSpecAcmeSolversSelector struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames []string `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones []string `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversSelectorArgs and ClusterIssuerSpecAcmeSolversSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversSelectorOutput() ClusterIssuerSpecAcmeSolversSelectorOutput
	ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversSelectorOutput
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type ClusterIssuerSpecAcmeSolversSelectorArgs struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones pulumi.StringArrayInput `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorOutput() ClusterIssuerSpecAcmeSolversSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversSelectorOutput).ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversSelectorArgs, ClusterIssuerSpecAcmeSolversSelectorPtr and ClusterIssuerSpecAcmeSolversSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversSelectorPtrType ClusterIssuerSpecAcmeSolversSelectorArgs

func ClusterIssuerSpecAcmeSolversSelectorPtr(v *ClusterIssuerSpecAcmeSolversSelectorArgs) ClusterIssuerSpecAcmeSolversSelectorPtrInput {	return (*clusterIssuerSpecAcmeSolversSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversSelectorPtrType) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversSelectorPtrType) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversSelectorPtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type ClusterIssuerSpecAcmeSolversSelectorOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorOutput() ClusterIssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversSelector) *ClusterIssuerSpecAcmeSolversSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversSelectorPtrOutput)
}
// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversSelector) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversSelector) []string { return v.DnsZones }).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o ClusterIssuerSpecAcmeSolversSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v ClusterIssuerSpecAcmeSolversSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversSelectorPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversSelectorOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversSelector) ClusterIssuerSpecAcmeSolversSelector { return *v }).(ClusterIssuerSpecAcmeSolversSelectorOutput)
}

// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsZones
	}).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecAcmeSolversSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type ClusterIssuerSpecCa struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName string `pulumi:"secretName"`
}

// ClusterIssuerSpecCaInput is an input type that accepts ClusterIssuerSpecCaArgs and ClusterIssuerSpecCaOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecCaInput` via:
//
//          ClusterIssuerSpecCaArgs{...}
type ClusterIssuerSpecCaInput interface {
	pulumi.Input

	ToClusterIssuerSpecCaOutput() ClusterIssuerSpecCaOutput
	ToClusterIssuerSpecCaOutputWithContext(context.Context) ClusterIssuerSpecCaOutput
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type ClusterIssuerSpecCaArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (ClusterIssuerSpecCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecCa)(nil)).Elem()
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaOutput() ClusterIssuerSpecCaOutput {
	return i.ToClusterIssuerSpecCaOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaOutputWithContext(ctx context.Context) ClusterIssuerSpecCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecCaOutput)
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return i.ToClusterIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecCaOutput).ToClusterIssuerSpecCaPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecCaPtrInput is an input type that accepts ClusterIssuerSpecCaArgs, ClusterIssuerSpecCaPtr and ClusterIssuerSpecCaPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecCaPtrInput` via:
//
//          ClusterIssuerSpecCaArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecCaPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput
	ToClusterIssuerSpecCaPtrOutputWithContext(context.Context) ClusterIssuerSpecCaPtrOutput
}

type clusterIssuerSpecCaPtrType ClusterIssuerSpecCaArgs

func ClusterIssuerSpecCaPtr(v *ClusterIssuerSpecCaArgs) ClusterIssuerSpecCaPtrInput {	return (*clusterIssuerSpecCaPtrType)(v)
}

func (*clusterIssuerSpecCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecCa)(nil)).Elem()
}

func (i *clusterIssuerSpecCaPtrType) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return i.ToClusterIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecCaPtrType) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecCaPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type ClusterIssuerSpecCaOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecCa)(nil)).Elem()
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaOutput() ClusterIssuerSpecCaOutput {
	return o
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaOutputWithContext(ctx context.Context) ClusterIssuerSpecCaOutput {
	return o
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return o.ToClusterIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecCa) *ClusterIssuerSpecCa {
		return &v
	}).(ClusterIssuerSpecCaPtrOutput)
}
// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o ClusterIssuerSpecCaOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecCa) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o ClusterIssuerSpecCaOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecCa) string { return v.SecretName }).(pulumi.StringOutput)
}

type ClusterIssuerSpecCaPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecCa)(nil)).Elem()
}

func (o ClusterIssuerSpecCaPtrOutput) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return o
}

func (o ClusterIssuerSpecCaPtrOutput) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return o
}

func (o ClusterIssuerSpecCaPtrOutput) Elem() ClusterIssuerSpecCaOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecCa) ClusterIssuerSpecCa { return *v }).(ClusterIssuerSpecCaOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o ClusterIssuerSpecCaPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o ClusterIssuerSpecCaPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecCa) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type ClusterIssuerSpecSelfSigned struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
}

// ClusterIssuerSpecSelfSignedInput is an input type that accepts ClusterIssuerSpecSelfSignedArgs and ClusterIssuerSpecSelfSignedOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecSelfSignedInput` via:
//
//          ClusterIssuerSpecSelfSignedArgs{...}
type ClusterIssuerSpecSelfSignedInput interface {
	pulumi.Input

	ToClusterIssuerSpecSelfSignedOutput() ClusterIssuerSpecSelfSignedOutput
	ToClusterIssuerSpecSelfSignedOutputWithContext(context.Context) ClusterIssuerSpecSelfSignedOutput
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type ClusterIssuerSpecSelfSignedArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
}

func (ClusterIssuerSpecSelfSignedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedOutput() ClusterIssuerSpecSelfSignedOutput {
	return i.ToClusterIssuerSpecSelfSignedOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecSelfSignedOutput)
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return i.ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecSelfSignedOutput).ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecSelfSignedPtrInput is an input type that accepts ClusterIssuerSpecSelfSignedArgs, ClusterIssuerSpecSelfSignedPtr and ClusterIssuerSpecSelfSignedPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecSelfSignedPtrInput` via:
//
//          ClusterIssuerSpecSelfSignedArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecSelfSignedPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput
	ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Context) ClusterIssuerSpecSelfSignedPtrOutput
}

type clusterIssuerSpecSelfSignedPtrType ClusterIssuerSpecSelfSignedArgs

func ClusterIssuerSpecSelfSignedPtr(v *ClusterIssuerSpecSelfSignedArgs) ClusterIssuerSpecSelfSignedPtrInput {	return (*clusterIssuerSpecSelfSignedPtrType)(v)
}

func (*clusterIssuerSpecSelfSignedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (i *clusterIssuerSpecSelfSignedPtrType) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return i.ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecSelfSignedPtrType) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecSelfSignedPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type ClusterIssuerSpecSelfSignedOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecSelfSignedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedOutput() ClusterIssuerSpecSelfSignedOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecSelfSigned) *ClusterIssuerSpecSelfSigned {
		return &v
	}).(ClusterIssuerSpecSelfSignedPtrOutput)
}
// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o ClusterIssuerSpecSelfSignedOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterIssuerSpecSelfSigned) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecSelfSignedPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecSelfSignedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (o ClusterIssuerSpecSelfSignedPtrOutput) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedPtrOutput) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedPtrOutput) Elem() ClusterIssuerSpecSelfSignedOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecSelfSigned) ClusterIssuerSpecSelfSigned { return *v }).(ClusterIssuerSpecSelfSignedOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o ClusterIssuerSpecSelfSignedPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecSelfSigned) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type ClusterIssuerSpecVault struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth ClusterIssuerSpecVaultAuth `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path string `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server string `pulumi:"server"`
}

// ClusterIssuerSpecVaultInput is an input type that accepts ClusterIssuerSpecVaultArgs and ClusterIssuerSpecVaultOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultInput` via:
//
//          ClusterIssuerSpecVaultArgs{...}
type ClusterIssuerSpecVaultInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultOutput() ClusterIssuerSpecVaultOutput
	ToClusterIssuerSpecVaultOutputWithContext(context.Context) ClusterIssuerSpecVaultOutput
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type ClusterIssuerSpecVaultArgs struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth ClusterIssuerSpecVaultAuthInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path pulumi.StringInput `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringInput `pulumi:"server"`
}

func (ClusterIssuerSpecVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVault)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultOutput() ClusterIssuerSpecVaultOutput {
	return i.ToClusterIssuerSpecVaultOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultOutput)
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return i.ToClusterIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultOutput).ToClusterIssuerSpecVaultPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultPtrInput is an input type that accepts ClusterIssuerSpecVaultArgs, ClusterIssuerSpecVaultPtr and ClusterIssuerSpecVaultPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultPtrInput` via:
//
//          ClusterIssuerSpecVaultArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput
	ToClusterIssuerSpecVaultPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultPtrOutput
}

type clusterIssuerSpecVaultPtrType ClusterIssuerSpecVaultArgs

func ClusterIssuerSpecVaultPtr(v *ClusterIssuerSpecVaultArgs) ClusterIssuerSpecVaultPtrInput {	return (*clusterIssuerSpecVaultPtrType)(v)
}

func (*clusterIssuerSpecVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVault)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultPtrType) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return i.ToClusterIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultPtrType) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type ClusterIssuerSpecVaultOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVault)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultOutput() ClusterIssuerSpecVaultOutput {
	return o
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultOutput {
	return o
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return o.ToClusterIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVault) *ClusterIssuerSpecVault {
		return &v
	}).(ClusterIssuerSpecVaultPtrOutput)
}
// Auth configures how cert-manager authenticates with the Vault server.
func (o ClusterIssuerSpecVaultOutput) Auth() ClusterIssuerSpecVaultAuthOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVault) ClusterIssuerSpecVaultAuth { return v.Auth }).(ClusterIssuerSpecVaultAuthOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o ClusterIssuerSpecVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o ClusterIssuerSpecVaultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVault) string { return v.Path }).(pulumi.StringOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o ClusterIssuerSpecVaultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVault) string { return v.Server }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVault)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultPtrOutput) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultPtrOutput) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultPtrOutput) Elem() ClusterIssuerSpecVaultOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVault) ClusterIssuerSpecVault { return *v }).(ClusterIssuerSpecVaultOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o ClusterIssuerSpecVaultPtrOutput) Auth() ClusterIssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVault) *ClusterIssuerSpecVaultAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterIssuerSpecVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o ClusterIssuerSpecVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o ClusterIssuerSpecVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o ClusterIssuerSpecVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type ClusterIssuerSpecVaultAuth struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole *ClusterIssuerSpecVaultAuthAppRole `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes *ClusterIssuerSpecVaultAuthKubernetes `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef *ClusterIssuerSpecVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
}

// ClusterIssuerSpecVaultAuthInput is an input type that accepts ClusterIssuerSpecVaultAuthArgs and ClusterIssuerSpecVaultAuthOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthInput` via:
//
//          ClusterIssuerSpecVaultAuthArgs{...}
type ClusterIssuerSpecVaultAuthInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthOutput() ClusterIssuerSpecVaultAuthOutput
	ToClusterIssuerSpecVaultAuthOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthOutput
}

// Auth configures how cert-manager authenticates with the Vault server.
type ClusterIssuerSpecVaultAuthArgs struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole ClusterIssuerSpecVaultAuthAppRolePtrInput `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes ClusterIssuerSpecVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
}

func (ClusterIssuerSpecVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthOutput() ClusterIssuerSpecVaultAuthOutput {
	return i.ToClusterIssuerSpecVaultAuthOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthOutput)
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthOutput).ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthArgs, ClusterIssuerSpecVaultAuthPtr and ClusterIssuerSpecVaultAuthPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput
	ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthPtrOutput
}

type clusterIssuerSpecVaultAuthPtrType ClusterIssuerSpecVaultAuthArgs

func ClusterIssuerSpecVaultAuthPtr(v *ClusterIssuerSpecVaultAuthArgs) ClusterIssuerSpecVaultAuthPtrInput {	return (*clusterIssuerSpecVaultAuthPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthPtrType) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthPtrType) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type ClusterIssuerSpecVaultAuthOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthOutput() ClusterIssuerSpecVaultAuthOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuth {
		return &v
	}).(ClusterIssuerSpecVaultAuthPtrOutput)
}
// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o ClusterIssuerSpecVaultAuthOutput) AppRole() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthAppRole { return v.AppRole }).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o ClusterIssuerSpecVaultAuthOutput) Kubernetes() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthKubernetes { return v.Kubernetes }).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o ClusterIssuerSpecVaultAuthOutput) TokenSecretRef() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthTokenSecretRef { return v.TokenSecretRef }).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

type ClusterIssuerSpecVaultAuthPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthPtrOutput) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthPtrOutput) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthPtrOutput) Elem() ClusterIssuerSpecVaultAuthOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuth) ClusterIssuerSpecVaultAuth { return *v }).(ClusterIssuerSpecVaultAuthOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o ClusterIssuerSpecVaultAuthPtrOutput) AppRole() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o ClusterIssuerSpecVaultAuthPtrOutput) Kubernetes() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o ClusterIssuerSpecVaultAuthPtrOutput) TokenSecretRef() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type ClusterIssuerSpecVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId string `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef ClusterIssuerSpecVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// ClusterIssuerSpecVaultAuthAppRoleInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleArgs and ClusterIssuerSpecVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRoleInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleArgs{...}
type ClusterIssuerSpecVaultAuthAppRoleInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRoleOutput() ClusterIssuerSpecVaultAuthAppRoleOutput
	ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type ClusterIssuerSpecVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path pulumi.StringInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef ClusterIssuerSpecVaultAuthAppRoleSecretRefInput `pulumi:"secretRef"`
}

func (ClusterIssuerSpecVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRoleOutput() ClusterIssuerSpecVaultAuthAppRoleOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleOutput)
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleOutput).ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthAppRolePtrInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleArgs, ClusterIssuerSpecVaultAuthAppRolePtr and ClusterIssuerSpecVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRolePtrInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput
	ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput
}

type clusterIssuerSpecVaultAuthAppRolePtrType ClusterIssuerSpecVaultAuthAppRoleArgs

func ClusterIssuerSpecVaultAuthAppRolePtr(v *ClusterIssuerSpecVaultAuthAppRoleArgs) ClusterIssuerSpecVaultAuthAppRolePtrInput {	return (*clusterIssuerSpecVaultAuthAppRolePtrType)(v)
}

func (*clusterIssuerSpecVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthAppRolePtrType) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthAppRolePtrType) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type ClusterIssuerSpecVaultAuthAppRoleOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRoleOutput() ClusterIssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRole) *ClusterIssuerSpecVaultAuthAppRole {
		return &v
	}).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}
// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o ClusterIssuerSpecVaultAuthAppRoleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthAppRole) string { return v.Path }).(pulumi.StringOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o ClusterIssuerSpecVaultAuthAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o ClusterIssuerSpecVaultAuthAppRoleOutput) SecretRef() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthAppRole) ClusterIssuerSpecVaultAuthAppRoleSecretRef { return v.SecretRef }).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput)
}

type ClusterIssuerSpecVaultAuthAppRolePtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) Elem() ClusterIssuerSpecVaultAuthAppRoleOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthAppRole) ClusterIssuerSpecVaultAuthAppRole { return *v }).(ClusterIssuerSpecVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) SecretRef() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthAppRole) *ClusterIssuerSpecVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type ClusterIssuerSpecVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVaultAuthAppRoleSecretRefInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs and ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRoleSecretRefInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs{...}
type ClusterIssuerSpecVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput
	ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput)
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput).ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs, ClusterIssuerSpecVaultAuthAppRoleSecretRefPtr and ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput
	ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput
}

type clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs

func ClusterIssuerSpecVaultAuthAppRoleSecretRefPtr(v *ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput {	return (*clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRoleSecretRef) *ClusterIssuerSpecVaultAuthAppRoleSecretRef {
		return &v
	}).(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthAppRoleSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Elem() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthAppRoleSecretRef) ClusterIssuerSpecVaultAuthAppRoleSecretRef { return *v }).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type ClusterIssuerSpecVaultAuthKubernetes struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role string `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef ClusterIssuerSpecVaultAuthKubernetesSecretRef `pulumi:"secretRef"`
}

// ClusterIssuerSpecVaultAuthKubernetesInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesArgs and ClusterIssuerSpecVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesArgs{...}
type ClusterIssuerSpecVaultAuthKubernetesInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesOutput() ClusterIssuerSpecVaultAuthKubernetesOutput
	ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type ClusterIssuerSpecVaultAuthKubernetesArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role pulumi.StringInput `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef ClusterIssuerSpecVaultAuthKubernetesSecretRefInput `pulumi:"secretRef"`
}

func (ClusterIssuerSpecVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesOutput() ClusterIssuerSpecVaultAuthKubernetesOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesOutput)
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesOutput).ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthKubernetesPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesArgs, ClusterIssuerSpecVaultAuthKubernetesPtr and ClusterIssuerSpecVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput
	ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput
}

type clusterIssuerSpecVaultAuthKubernetesPtrType ClusterIssuerSpecVaultAuthKubernetesArgs

func ClusterIssuerSpecVaultAuthKubernetesPtr(v *ClusterIssuerSpecVaultAuthKubernetesArgs) ClusterIssuerSpecVaultAuthKubernetesPtrInput {	return (*clusterIssuerSpecVaultAuthKubernetesPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthKubernetesPtrType) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthKubernetesPtrType) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type ClusterIssuerSpecVaultAuthKubernetesOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesOutput() ClusterIssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetes) *ClusterIssuerSpecVaultAuthKubernetes {
		return &v
	}).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}
// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o ClusterIssuerSpecVaultAuthKubernetesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthKubernetes) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o ClusterIssuerSpecVaultAuthKubernetesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthKubernetes) string { return v.Role }).(pulumi.StringOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o ClusterIssuerSpecVaultAuthKubernetesOutput) SecretRef() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthKubernetes) ClusterIssuerSpecVaultAuthKubernetesSecretRef { return v.SecretRef }).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput)
}

type ClusterIssuerSpecVaultAuthKubernetesPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) Elem() ClusterIssuerSpecVaultAuthKubernetesOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthKubernetes) ClusterIssuerSpecVaultAuthKubernetes { return *v }).(ClusterIssuerSpecVaultAuthKubernetesOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) SecretRef() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthKubernetes) *ClusterIssuerSpecVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type ClusterIssuerSpecVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVaultAuthKubernetesSecretRefInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs and ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesSecretRefInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs{...}
type ClusterIssuerSpecVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput
	ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput)
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput).ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs, ClusterIssuerSpecVaultAuthKubernetesSecretRefPtr and ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput
	ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput
}

type clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs

func ClusterIssuerSpecVaultAuthKubernetesSecretRefPtr(v *ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput {	return (*clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetesSecretRef) *ClusterIssuerSpecVaultAuthKubernetesSecretRef {
		return &v
	}).(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthKubernetesSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Elem() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthKubernetesSecretRef) ClusterIssuerSpecVaultAuthKubernetesSecretRef { return *v }).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterIssuerSpecVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVaultAuthTokenSecretRefInput is an input type that accepts ClusterIssuerSpecVaultAuthTokenSecretRefArgs and ClusterIssuerSpecVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthTokenSecretRefInput` via:
//
//          ClusterIssuerSpecVaultAuthTokenSecretRefArgs{...}
type ClusterIssuerSpecVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthTokenSecretRefOutput() ClusterIssuerSpecVaultAuthTokenSecretRefOutput
	ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterIssuerSpecVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefOutput() ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return i.ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthTokenSecretRefOutput)
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthTokenSecretRefOutput).ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthTokenSecretRefArgs, ClusterIssuerSpecVaultAuthTokenSecretRefPtr and ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput
	ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput
}

type clusterIssuerSpecVaultAuthTokenSecretRefPtrType ClusterIssuerSpecVaultAuthTokenSecretRefArgs

func ClusterIssuerSpecVaultAuthTokenSecretRefPtr(v *ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput {	return (*clusterIssuerSpecVaultAuthTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthTokenSecretRefPtrType) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthTokenSecretRefPtrType) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterIssuerSpecVaultAuthTokenSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefOutput() ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthTokenSecretRef) *ClusterIssuerSpecVaultAuthTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVaultAuthTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthTokenSecretRef) ClusterIssuerSpecVaultAuthTokenSecretRef { return *v }).(ClusterIssuerSpecVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type ClusterIssuerSpecVenafi struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud *ClusterIssuerSpecVenafiCloud `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp *ClusterIssuerSpecVenafiTpp `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone string `pulumi:"zone"`
}

// ClusterIssuerSpecVenafiInput is an input type that accepts ClusterIssuerSpecVenafiArgs and ClusterIssuerSpecVenafiOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiInput` via:
//
//          ClusterIssuerSpecVenafiArgs{...}
type ClusterIssuerSpecVenafiInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiOutput() ClusterIssuerSpecVenafiOutput
	ToClusterIssuerSpecVenafiOutputWithContext(context.Context) ClusterIssuerSpecVenafiOutput
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type ClusterIssuerSpecVenafiArgs struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud ClusterIssuerSpecVenafiCloudPtrInput `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp ClusterIssuerSpecVenafiTppPtrInput `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ClusterIssuerSpecVenafiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiOutput() ClusterIssuerSpecVenafiOutput {
	return i.ToClusterIssuerSpecVenafiOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiOutput)
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return i.ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiOutput).ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiPtrInput is an input type that accepts ClusterIssuerSpecVenafiArgs, ClusterIssuerSpecVenafiPtr and ClusterIssuerSpecVenafiPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiPtrInput` via:
//
//          ClusterIssuerSpecVenafiArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput
	ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiPtrOutput
}

type clusterIssuerSpecVenafiPtrType ClusterIssuerSpecVenafiArgs

func ClusterIssuerSpecVenafiPtr(v *ClusterIssuerSpecVenafiArgs) ClusterIssuerSpecVenafiPtrInput {	return (*clusterIssuerSpecVenafiPtrType)(v)
}

func (*clusterIssuerSpecVenafiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiPtrType) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return i.ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiPtrType) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type ClusterIssuerSpecVenafiOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiOutput() ClusterIssuerSpecVenafiOutput {
	return o
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiOutput {
	return o
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return o.ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafi {
		return &v
	}).(ClusterIssuerSpecVenafiPtrOutput)
}
// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiOutput) Cloud() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiCloud { return v.Cloud }).(ClusterIssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiOutput) Tpp() ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiTpp { return v.Tpp }).(ClusterIssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o ClusterIssuerSpecVenafiOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafi) string { return v.Zone }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiPtrOutput) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiPtrOutput) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiPtrOutput) Elem() ClusterIssuerSpecVenafiOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafi) ClusterIssuerSpecVenafi { return *v }).(ClusterIssuerSpecVenafiOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiPtrOutput) Cloud() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiCloud {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(ClusterIssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiPtrOutput) Tpp() ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiTpp {
		if v == nil {
			return nil
		}
		return v.Tpp
	}).(ClusterIssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o ClusterIssuerSpecVenafiPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafi) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiCloud struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef ClusterIssuerSpecVenafiCloudApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url *string `pulumi:"url"`
}

// ClusterIssuerSpecVenafiCloudInput is an input type that accepts ClusterIssuerSpecVenafiCloudArgs and ClusterIssuerSpecVenafiCloudOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudInput` via:
//
//          ClusterIssuerSpecVenafiCloudArgs{...}
type ClusterIssuerSpecVenafiCloudInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudOutput() ClusterIssuerSpecVenafiCloudOutput
	ToClusterIssuerSpecVenafiCloudOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudOutput
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiCloudArgs struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ClusterIssuerSpecVenafiCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudOutput() ClusterIssuerSpecVenafiCloudOutput {
	return i.ToClusterIssuerSpecVenafiCloudOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudOutput)
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudOutput).ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiCloudPtrInput is an input type that accepts ClusterIssuerSpecVenafiCloudArgs, ClusterIssuerSpecVenafiCloudPtr and ClusterIssuerSpecVenafiCloudPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudPtrInput` via:
//
//          ClusterIssuerSpecVenafiCloudArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiCloudPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput
	ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudPtrOutput
}

type clusterIssuerSpecVenafiCloudPtrType ClusterIssuerSpecVenafiCloudArgs

func ClusterIssuerSpecVenafiCloudPtr(v *ClusterIssuerSpecVenafiCloudArgs) ClusterIssuerSpecVenafiCloudPtrInput {	return (*clusterIssuerSpecVenafiCloudPtrType)(v)
}

func (*clusterIssuerSpecVenafiCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiCloudPtrType) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiCloudPtrType) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiCloudOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudOutput() ClusterIssuerSpecVenafiCloudOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloud) *ClusterIssuerSpecVenafiCloud {
		return &v
	}).(ClusterIssuerSpecVenafiCloudPtrOutput)
}
// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o ClusterIssuerSpecVenafiCloudOutput) ApiTokenSecretRef() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiCloud) ClusterIssuerSpecVenafiCloudApiTokenSecretRef { return v.ApiTokenSecretRef }).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o ClusterIssuerSpecVenafiCloudOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiCloud) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecVenafiCloudPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudPtrOutput) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudPtrOutput) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudPtrOutput) Elem() ClusterIssuerSpecVenafiCloudOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiCloud) ClusterIssuerSpecVenafiCloud { return *v }).(ClusterIssuerSpecVenafiCloudOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o ClusterIssuerSpecVenafiCloudPtrOutput) ApiTokenSecretRef() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiCloud) *ClusterIssuerSpecVenafiCloudApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ApiTokenSecretRef
	}).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o ClusterIssuerSpecVenafiCloudPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiCloud) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type ClusterIssuerSpecVenafiCloudApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput is an input type that accepts ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs and ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput` via:
//
//          ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput
	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return i.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput).ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs, ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtr and ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
}

type clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs

func ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtr(v *ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput {	return (*clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *ClusterIssuerSpecVenafiCloudApiTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiCloudApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiCloudApiTokenSecretRef) ClusterIssuerSpecVenafiCloudApiTokenSecretRef { return *v }).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiTpp struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle *string `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef ClusterIssuerSpecVenafiTppCredentialsRef `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url string `pulumi:"url"`
}

// ClusterIssuerSpecVenafiTppInput is an input type that accepts ClusterIssuerSpecVenafiTppArgs and ClusterIssuerSpecVenafiTppOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppInput` via:
//
//          ClusterIssuerSpecVenafiTppArgs{...}
type ClusterIssuerSpecVenafiTppInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppOutput() ClusterIssuerSpecVenafiTppOutput
	ToClusterIssuerSpecVenafiTppOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppOutput
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiTppArgs struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef ClusterIssuerSpecVenafiTppCredentialsRefInput `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url pulumi.StringInput `pulumi:"url"`
}

func (ClusterIssuerSpecVenafiTppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppOutput() ClusterIssuerSpecVenafiTppOutput {
	return i.ToClusterIssuerSpecVenafiTppOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppOutput)
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppOutput).ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiTppPtrInput is an input type that accepts ClusterIssuerSpecVenafiTppArgs, ClusterIssuerSpecVenafiTppPtr and ClusterIssuerSpecVenafiTppPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppPtrInput` via:
//
//          ClusterIssuerSpecVenafiTppArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiTppPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput
	ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppPtrOutput
}

type clusterIssuerSpecVenafiTppPtrType ClusterIssuerSpecVenafiTppArgs

func ClusterIssuerSpecVenafiTppPtr(v *ClusterIssuerSpecVenafiTppArgs) ClusterIssuerSpecVenafiTppPtrInput {	return (*clusterIssuerSpecVenafiTppPtrType)(v)
}

func (*clusterIssuerSpecVenafiTppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiTppPtrType) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiTppPtrType) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiTppOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppOutput() ClusterIssuerSpecVenafiTppOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTpp) *ClusterIssuerSpecVenafiTpp {
		return &v
	}).(ClusterIssuerSpecVenafiTppPtrOutput)
}
// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o ClusterIssuerSpecVenafiTppOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiTpp) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o ClusterIssuerSpecVenafiTppOutput) CredentialsRef() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiTpp) ClusterIssuerSpecVenafiTppCredentialsRef { return v.CredentialsRef }).(ClusterIssuerSpecVenafiTppCredentialsRefOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o ClusterIssuerSpecVenafiTppOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiTpp) string { return v.Url }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiTppPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppPtrOutput) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppPtrOutput) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppPtrOutput) Elem() ClusterIssuerSpecVenafiTppOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiTpp) ClusterIssuerSpecVenafiTpp { return *v }).(ClusterIssuerSpecVenafiTppOutput)
}

// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o ClusterIssuerSpecVenafiTppPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o ClusterIssuerSpecVenafiTppPtrOutput) CredentialsRef() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiTpp) *ClusterIssuerSpecVenafiTppCredentialsRef {
		if v == nil {
			return nil
		}
		return &v.CredentialsRef
	}).(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o ClusterIssuerSpecVenafiTppPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type ClusterIssuerSpecVenafiTppCredentialsRef struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVenafiTppCredentialsRefInput is an input type that accepts ClusterIssuerSpecVenafiTppCredentialsRefArgs and ClusterIssuerSpecVenafiTppCredentialsRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppCredentialsRefInput` via:
//
//          ClusterIssuerSpecVenafiTppCredentialsRefArgs{...}
type ClusterIssuerSpecVenafiTppCredentialsRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppCredentialsRefOutput() ClusterIssuerSpecVenafiTppCredentialsRefOutput
	ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppCredentialsRefOutput
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type ClusterIssuerSpecVenafiTppCredentialsRefArgs struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVenafiTppCredentialsRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefOutput() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return i.ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppCredentialsRefOutput)
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppCredentialsRefOutput).ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiTppCredentialsRefPtrInput is an input type that accepts ClusterIssuerSpecVenafiTppCredentialsRefArgs, ClusterIssuerSpecVenafiTppCredentialsRefPtr and ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppCredentialsRefPtrInput` via:
//
//          ClusterIssuerSpecVenafiTppCredentialsRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiTppCredentialsRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput
	ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput
}

type clusterIssuerSpecVenafiTppCredentialsRefPtrType ClusterIssuerSpecVenafiTppCredentialsRefArgs

func ClusterIssuerSpecVenafiTppCredentialsRefPtr(v *ClusterIssuerSpecVenafiTppCredentialsRefArgs) ClusterIssuerSpecVenafiTppCredentialsRefPtrInput {	return (*clusterIssuerSpecVenafiTppCredentialsRefPtrType)(v)
}

func (*clusterIssuerSpecVenafiTppCredentialsRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiTppCredentialsRefPtrType) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiTppCredentialsRefPtrType) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type ClusterIssuerSpecVenafiTppCredentialsRefOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppCredentialsRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefOutput() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTppCredentialsRef) *ClusterIssuerSpecVenafiTppCredentialsRef {
		return &v
	}).(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput)
}
// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerSpecVenafiTppCredentialsRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) Elem() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiTppCredentialsRef) ClusterIssuerSpecVenafiTppCredentialsRef { return *v }).(ClusterIssuerSpecVenafiTppCredentialsRefOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerSpecVenafiTppCredentialsRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Status of the ClusterIssuer. This is set and managed automatically.
type ClusterIssuerStatus struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme *ClusterIssuerStatusAcme `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions []ClusterIssuerStatusConditions `pulumi:"conditions"`
}

// ClusterIssuerStatusInput is an input type that accepts ClusterIssuerStatusArgs and ClusterIssuerStatusOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusInput` via:
//
//          ClusterIssuerStatusArgs{...}
type ClusterIssuerStatusInput interface {
	pulumi.Input

	ToClusterIssuerStatusOutput() ClusterIssuerStatusOutput
	ToClusterIssuerStatusOutputWithContext(context.Context) ClusterIssuerStatusOutput
}

// Status of the ClusterIssuer. This is set and managed automatically.
type ClusterIssuerStatusArgs struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme ClusterIssuerStatusAcmePtrInput `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions ClusterIssuerStatusConditionsArrayInput `pulumi:"conditions"`
}

func (ClusterIssuerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatus)(nil)).Elem()
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusOutput() ClusterIssuerStatusOutput {
	return i.ToClusterIssuerStatusOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusOutputWithContext(ctx context.Context) ClusterIssuerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusOutput)
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return i.ToClusterIssuerStatusPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusOutput).ToClusterIssuerStatusPtrOutputWithContext(ctx)
}

// ClusterIssuerStatusPtrInput is an input type that accepts ClusterIssuerStatusArgs, ClusterIssuerStatusPtr and ClusterIssuerStatusPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusPtrInput` via:
//
//          ClusterIssuerStatusArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerStatusPtrInput interface {
	pulumi.Input

	ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput
	ToClusterIssuerStatusPtrOutputWithContext(context.Context) ClusterIssuerStatusPtrOutput
}

type clusterIssuerStatusPtrType ClusterIssuerStatusArgs

func ClusterIssuerStatusPtr(v *ClusterIssuerStatusArgs) ClusterIssuerStatusPtrInput {	return (*clusterIssuerStatusPtrType)(v)
}

func (*clusterIssuerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatus)(nil)).Elem()
}

func (i *clusterIssuerStatusPtrType) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return i.ToClusterIssuerStatusPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerStatusPtrType) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusPtrOutput)
}

// Status of the ClusterIssuer. This is set and managed automatically.
type ClusterIssuerStatusOutput struct { *pulumi.OutputState }

func (ClusterIssuerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatus)(nil)).Elem()
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusOutput() ClusterIssuerStatusOutput {
	return o
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusOutputWithContext(ctx context.Context) ClusterIssuerStatusOutput {
	return o
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return o.ToClusterIssuerStatusPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatus) *ClusterIssuerStatus {
		return &v
	}).(ClusterIssuerStatusPtrOutput)
}
// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o ClusterIssuerStatusOutput) Acme() ClusterIssuerStatusAcmePtrOutput {
	return o.ApplyT(func (v ClusterIssuerStatus) *ClusterIssuerStatusAcme { return v.Acme }).(ClusterIssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o ClusterIssuerStatusOutput) Conditions() ClusterIssuerStatusConditionsArrayOutput {
	return o.ApplyT(func (v ClusterIssuerStatus) []ClusterIssuerStatusConditions { return v.Conditions }).(ClusterIssuerStatusConditionsArrayOutput)
}

type ClusterIssuerStatusPtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatus)(nil)).Elem()
}

func (o ClusterIssuerStatusPtrOutput) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return o
}

func (o ClusterIssuerStatusPtrOutput) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return o
}

func (o ClusterIssuerStatusPtrOutput) Elem() ClusterIssuerStatusOutput {
	return o.ApplyT(func (v *ClusterIssuerStatus) ClusterIssuerStatus { return *v }).(ClusterIssuerStatusOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o ClusterIssuerStatusPtrOutput) Acme() ClusterIssuerStatusAcmePtrOutput {
	return o.ApplyT(func (v *ClusterIssuerStatus) *ClusterIssuerStatusAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(ClusterIssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o ClusterIssuerStatusPtrOutput) Conditions() ClusterIssuerStatusConditionsArrayOutput {
	return o.ApplyT(func (v *ClusterIssuerStatus) []ClusterIssuerStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ClusterIssuerStatusConditionsArrayOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type ClusterIssuerStatusAcme struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail *string `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri *string `pulumi:"uri"`
}

// ClusterIssuerStatusAcmeInput is an input type that accepts ClusterIssuerStatusAcmeArgs and ClusterIssuerStatusAcmeOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusAcmeInput` via:
//
//          ClusterIssuerStatusAcmeArgs{...}
type ClusterIssuerStatusAcmeInput interface {
	pulumi.Input

	ToClusterIssuerStatusAcmeOutput() ClusterIssuerStatusAcmeOutput
	ToClusterIssuerStatusAcmeOutputWithContext(context.Context) ClusterIssuerStatusAcmeOutput
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type ClusterIssuerStatusAcmeArgs struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail pulumi.StringPtrInput `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ClusterIssuerStatusAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusAcme)(nil)).Elem()
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmeOutput() ClusterIssuerStatusAcmeOutput {
	return i.ToClusterIssuerStatusAcmeOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmeOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusAcmeOutput)
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return i.ToClusterIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusAcmeOutput).ToClusterIssuerStatusAcmePtrOutputWithContext(ctx)
}

// ClusterIssuerStatusAcmePtrInput is an input type that accepts ClusterIssuerStatusAcmeArgs, ClusterIssuerStatusAcmePtr and ClusterIssuerStatusAcmePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusAcmePtrInput` via:
//
//          ClusterIssuerStatusAcmeArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerStatusAcmePtrInput interface {
	pulumi.Input

	ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput
	ToClusterIssuerStatusAcmePtrOutputWithContext(context.Context) ClusterIssuerStatusAcmePtrOutput
}

type clusterIssuerStatusAcmePtrType ClusterIssuerStatusAcmeArgs

func ClusterIssuerStatusAcmePtr(v *ClusterIssuerStatusAcmeArgs) ClusterIssuerStatusAcmePtrInput {	return (*clusterIssuerStatusAcmePtrType)(v)
}

func (*clusterIssuerStatusAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatusAcme)(nil)).Elem()
}

func (i *clusterIssuerStatusAcmePtrType) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return i.ToClusterIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerStatusAcmePtrType) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusAcmePtrOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type ClusterIssuerStatusAcmeOutput struct { *pulumi.OutputState }

func (ClusterIssuerStatusAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusAcme)(nil)).Elem()
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmeOutput() ClusterIssuerStatusAcmeOutput {
	return o
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmeOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmeOutput {
	return o
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return o.ToClusterIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatusAcme) *ClusterIssuerStatusAcme {
		return &v
	}).(ClusterIssuerStatusAcmePtrOutput)
}
// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o ClusterIssuerStatusAcmeOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerStatusAcme) *string { return v.LastRegisteredEmail }).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o ClusterIssuerStatusAcmeOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerStatusAcme) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ClusterIssuerStatusAcmePtrOutput struct { *pulumi.OutputState }

func (ClusterIssuerStatusAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatusAcme)(nil)).Elem()
}

func (o ClusterIssuerStatusAcmePtrOutput) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return o
}

func (o ClusterIssuerStatusAcmePtrOutput) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return o
}

func (o ClusterIssuerStatusAcmePtrOutput) Elem() ClusterIssuerStatusAcmeOutput {
	return o.ApplyT(func (v *ClusterIssuerStatusAcme) ClusterIssuerStatusAcme { return *v }).(ClusterIssuerStatusAcmeOutput)
}

// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o ClusterIssuerStatusAcmePtrOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastRegisteredEmail
	}).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o ClusterIssuerStatusAcmePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *ClusterIssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// IssuerCondition contains condition information for an Issuer.
type ClusterIssuerStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message *string `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status string `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type string `pulumi:"type"`
}

// ClusterIssuerStatusConditionsInput is an input type that accepts ClusterIssuerStatusConditionsArgs and ClusterIssuerStatusConditionsOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusConditionsInput` via:
//
//          ClusterIssuerStatusConditionsArgs{...}
type ClusterIssuerStatusConditionsInput interface {
	pulumi.Input

	ToClusterIssuerStatusConditionsOutput() ClusterIssuerStatusConditionsOutput
	ToClusterIssuerStatusConditionsOutputWithContext(context.Context) ClusterIssuerStatusConditionsOutput
}

// IssuerCondition contains condition information for an Issuer.
type ClusterIssuerStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status pulumi.StringInput `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterIssuerStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusConditions)(nil)).Elem()
}

func (i ClusterIssuerStatusConditionsArgs) ToClusterIssuerStatusConditionsOutput() ClusterIssuerStatusConditionsOutput {
	return i.ToClusterIssuerStatusConditionsOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusConditionsArgs) ToClusterIssuerStatusConditionsOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusConditionsOutput)
}

// ClusterIssuerStatusConditionsArrayInput is an input type that accepts ClusterIssuerStatusConditionsArray and ClusterIssuerStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusConditionsArrayInput` via:
//
//          ClusterIssuerStatusConditionsArray{ ClusterIssuerStatusConditionsArgs{...} }
type ClusterIssuerStatusConditionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerStatusConditionsArrayOutput() ClusterIssuerStatusConditionsArrayOutput
	ToClusterIssuerStatusConditionsArrayOutputWithContext(context.Context) ClusterIssuerStatusConditionsArrayOutput
}

type ClusterIssuerStatusConditionsArray []ClusterIssuerStatusConditionsInput

func (ClusterIssuerStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerStatusConditions)(nil)).Elem()
}

func (i ClusterIssuerStatusConditionsArray) ToClusterIssuerStatusConditionsArrayOutput() ClusterIssuerStatusConditionsArrayOutput {
	return i.ToClusterIssuerStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusConditionsArray) ToClusterIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusConditionsArrayOutput)
}

// IssuerCondition contains condition information for an Issuer.
type ClusterIssuerStatusConditionsOutput struct { *pulumi.OutputState }

func (ClusterIssuerStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusConditions)(nil)).Elem()
}

func (o ClusterIssuerStatusConditionsOutput) ToClusterIssuerStatusConditionsOutput() ClusterIssuerStatusConditionsOutput {
	return o
}

func (o ClusterIssuerStatusConditionsOutput) ToClusterIssuerStatusConditionsOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
func (o ClusterIssuerStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last transition, complementing reason.
func (o ClusterIssuerStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last transition.
func (o ClusterIssuerStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterIssuerStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of ('True', 'False', 'Unknown').
func (o ClusterIssuerStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of the condition, known values are ('Ready').
func (o ClusterIssuerStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterIssuerStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterIssuerStatusConditionsArrayOutput struct { *pulumi.OutputState }

func (ClusterIssuerStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerStatusConditions)(nil)).Elem()
}

func (o ClusterIssuerStatusConditionsArrayOutput) ToClusterIssuerStatusConditionsArrayOutput() ClusterIssuerStatusConditionsArrayOutput {
	return o
}

func (o ClusterIssuerStatusConditionsArrayOutput) ToClusterIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsArrayOutput {
	return o
}

func (o ClusterIssuerStatusConditionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterIssuerStatusConditions {
		return vs[0].([]ClusterIssuerStatusConditions)[vs[1].(int)]
	}).(ClusterIssuerStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterIssuerTypeOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmePrivateKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01WebhookOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecCaOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecCaPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecSelfSignedOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecSelfSignedPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppCredentialsRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusAcmeOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusAcmePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusConditionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusConditionsArrayOutput{})
}
