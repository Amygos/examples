// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha3

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
type Issuer struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	Metadata metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec IssuerSpecPtrOutput `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status IssuerStatusPtrOutput `pulumi:"status"`
}

// NewIssuer registers a new resource with the given unique name, arguments, and options.
func NewIssuer(ctx *pulumi.Context,
	name string, args *IssuerArgs, opts ...pulumi.ResourceOption) (*Issuer, error) {
	if args == nil {
		args = &IssuerArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("cert-manager.io/v1alpha3")
	args.Kind = pulumi.StringPtr("Issuer")
	var resource Issuer
	err := ctx.RegisterResource("kubernetes:cert-manager.io/v1alpha3:Issuer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIssuer gets an existing Issuer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIssuer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IssuerState, opts ...pulumi.ResourceOption) (*Issuer, error) {
	var resource Issuer
	err := ctx.ReadResource("kubernetes:cert-manager.io/v1alpha3:Issuer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Issuer resources.
type issuerState struct {
	ApiVersion *string `pulumi:"apiVersion"`
	Kind *string `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec *IssuerSpec `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status *IssuerStatus `pulumi:"status"`
}

type IssuerState struct {
	ApiVersion pulumi.StringPtrInput
	Kind pulumi.StringPtrInput
	Metadata metav1.ObjectMetaPtrInput
	// Desired state of the Issuer resource.
	Spec IssuerSpecPtrInput
	// Status of the Issuer. This is set and managed automatically.
	Status IssuerStatusPtrInput
}

func (IssuerState) ElementType() reflect.Type {
	return reflect.TypeOf((*issuerState)(nil)).Elem()
}

type issuerArgs struct {
	ApiVersion *string `pulumi:"apiVersion"`
	Kind *string `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec *IssuerSpec `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status *IssuerStatus `pulumi:"status"`
}

// The set of arguments for constructing a Issuer resource.
type IssuerArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind pulumi.StringPtrInput
	Metadata metav1.ObjectMetaPtrInput
	// Desired state of the Issuer resource.
	Spec IssuerSpecPtrInput
	// Status of the Issuer. This is set and managed automatically.
	Status IssuerStatusPtrInput
}

func (IssuerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*issuerArgs)(nil)).Elem()
}

// An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
type IssuerType struct {
	ApiVersion *string `pulumi:"apiVersion"`
	Kind *string `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec *IssuerSpec `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status *IssuerStatus `pulumi:"status"`
}

// IssuerTypeInput is an input type that accepts IssuerTypeArgs and IssuerTypeOutput values.
// You can construct a concrete instance of `IssuerTypeInput` via:
//
//          IssuerTypeArgs{...}
type IssuerTypeInput interface {
	pulumi.Input

	ToIssuerTypeOutput() IssuerTypeOutput
	ToIssuerTypeOutputWithContext(context.Context) IssuerTypeOutput
}

// An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
type IssuerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec IssuerSpecPtrInput `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status IssuerStatusPtrInput `pulumi:"status"`
}

func (IssuerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerType)(nil)).Elem()
}

func (i IssuerTypeArgs) ToIssuerTypeOutput() IssuerTypeOutput {
	return i.ToIssuerTypeOutputWithContext(context.Background())
}

func (i IssuerTypeArgs) ToIssuerTypeOutputWithContext(ctx context.Context) IssuerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerTypeOutput)
}

// An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
type IssuerTypeOutput struct { *pulumi.OutputState }

func (IssuerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerType)(nil)).Elem()
}

func (o IssuerTypeOutput) ToIssuerTypeOutput() IssuerTypeOutput {
	return o
}

func (o IssuerTypeOutput) ToIssuerTypeOutputWithContext(ctx context.Context) IssuerTypeOutput {
	return o
}

func (o IssuerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o IssuerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o IssuerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func (v IssuerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Desired state of the Issuer resource.
func (o IssuerTypeOutput) Spec() IssuerSpecPtrOutput {
	return o.ApplyT(func (v IssuerType) *IssuerSpec { return v.Spec }).(IssuerSpecPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
func (o IssuerTypeOutput) Status() IssuerStatusPtrOutput {
	return o.ApplyT(func (v IssuerType) *IssuerStatus { return v.Status }).(IssuerStatusPtrOutput)
}

// Desired state of the Issuer resource.
type IssuerSpec struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme *IssuerSpecAcme `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca *IssuerSpecCa `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned *IssuerSpecSelfSigned `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault *IssuerSpecVault `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi *IssuerSpecVenafi `pulumi:"venafi"`
}

// IssuerSpecInput is an input type that accepts IssuerSpecArgs and IssuerSpecOutput values.
// You can construct a concrete instance of `IssuerSpecInput` via:
//
//          IssuerSpecArgs{...}
type IssuerSpecInput interface {
	pulumi.Input

	ToIssuerSpecOutput() IssuerSpecOutput
	ToIssuerSpecOutputWithContext(context.Context) IssuerSpecOutput
}

// Desired state of the Issuer resource.
type IssuerSpecArgs struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme IssuerSpecAcmePtrInput `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca IssuerSpecCaPtrInput `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned IssuerSpecSelfSignedPtrInput `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault IssuerSpecVaultPtrInput `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi IssuerSpecVenafiPtrInput `pulumi:"venafi"`
}

func (IssuerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpec)(nil)).Elem()
}

func (i IssuerSpecArgs) ToIssuerSpecOutput() IssuerSpecOutput {
	return i.ToIssuerSpecOutputWithContext(context.Background())
}

func (i IssuerSpecArgs) ToIssuerSpecOutputWithContext(ctx context.Context) IssuerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecOutput)
}

func (i IssuerSpecArgs) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return i.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (i IssuerSpecArgs) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecOutput).ToIssuerSpecPtrOutputWithContext(ctx)
}

// IssuerSpecPtrInput is an input type that accepts IssuerSpecArgs, IssuerSpecPtr and IssuerSpecPtrOutput values.
// You can construct a concrete instance of `IssuerSpecPtrInput` via:
//
//          IssuerSpecArgs{...}
//
//  or:
//
//          nil
type IssuerSpecPtrInput interface {
	pulumi.Input

	ToIssuerSpecPtrOutput() IssuerSpecPtrOutput
	ToIssuerSpecPtrOutputWithContext(context.Context) IssuerSpecPtrOutput
}

type issuerSpecPtrType IssuerSpecArgs

func IssuerSpecPtr(v *IssuerSpecArgs) IssuerSpecPtrInput {	return (*issuerSpecPtrType)(v)
}

func (*issuerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpec)(nil)).Elem()
}

func (i *issuerSpecPtrType) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return i.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (i *issuerSpecPtrType) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecPtrOutput)
}

// Desired state of the Issuer resource.
type IssuerSpecOutput struct { *pulumi.OutputState }

func (IssuerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpec)(nil)).Elem()
}

func (o IssuerSpecOutput) ToIssuerSpecOutput() IssuerSpecOutput {
	return o
}

func (o IssuerSpecOutput) ToIssuerSpecOutputWithContext(ctx context.Context) IssuerSpecOutput {
	return o
}

func (o IssuerSpecOutput) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return o.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (o IssuerSpecOutput) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpec {
		return &v
	}).(IssuerSpecPtrOutput)
}
// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o IssuerSpecOutput) Acme() IssuerSpecAcmePtrOutput {
	return o.ApplyT(func (v IssuerSpec) *IssuerSpecAcme { return v.Acme }).(IssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o IssuerSpecOutput) Ca() IssuerSpecCaPtrOutput {
	return o.ApplyT(func (v IssuerSpec) *IssuerSpecCa { return v.Ca }).(IssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o IssuerSpecOutput) SelfSigned() IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func (v IssuerSpec) *IssuerSpecSelfSigned { return v.SelfSigned }).(IssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o IssuerSpecOutput) Vault() IssuerSpecVaultPtrOutput {
	return o.ApplyT(func (v IssuerSpec) *IssuerSpecVault { return v.Vault }).(IssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o IssuerSpecOutput) Venafi() IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func (v IssuerSpec) *IssuerSpecVenafi { return v.Venafi }).(IssuerSpecVenafiPtrOutput)
}

type IssuerSpecPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpec)(nil)).Elem()
}

func (o IssuerSpecPtrOutput) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return o
}

func (o IssuerSpecPtrOutput) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return o
}

func (o IssuerSpecPtrOutput) Elem() IssuerSpecOutput {
	return o.ApplyT(func (v *IssuerSpec) IssuerSpec { return *v }).(IssuerSpecOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o IssuerSpecPtrOutput) Acme() IssuerSpecAcmePtrOutput {
	return o.ApplyT(func (v *IssuerSpec) *IssuerSpecAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o IssuerSpecPtrOutput) Ca() IssuerSpecCaPtrOutput {
	return o.ApplyT(func (v *IssuerSpec) *IssuerSpecCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(IssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o IssuerSpecPtrOutput) SelfSigned() IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func (v *IssuerSpec) *IssuerSpecSelfSigned {
		if v == nil {
			return nil
		}
		return v.SelfSigned
	}).(IssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o IssuerSpecPtrOutput) Vault() IssuerSpecVaultPtrOutput {
	return o.ApplyT(func (v *IssuerSpec) *IssuerSpecVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(IssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o IssuerSpecPtrOutput) Venafi() IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func (v *IssuerSpec) *IssuerSpecVenafi {
		if v == nil {
			return nil
		}
		return v.Venafi
	}).(IssuerSpecVenafiPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type IssuerSpecAcme struct {
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email *string `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding *IssuerSpecAcmeExternalAccountBinding `pulumi:"externalAccountBinding"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef IssuerSpecAcmePrivateKeySecretRef `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server string `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify *bool `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers []IssuerSpecAcmeSolvers `pulumi:"solvers"`
}

// IssuerSpecAcmeInput is an input type that accepts IssuerSpecAcmeArgs and IssuerSpecAcmeOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeInput` via:
//
//          IssuerSpecAcmeArgs{...}
type IssuerSpecAcmeInput interface {
	pulumi.Input

	ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput
	ToIssuerSpecAcmeOutputWithContext(context.Context) IssuerSpecAcmeOutput
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type IssuerSpecAcmeArgs struct {
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding IssuerSpecAcmeExternalAccountBindingPtrInput `pulumi:"externalAccountBinding"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef IssuerSpecAcmePrivateKeySecretRefInput `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server pulumi.StringInput `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify pulumi.BoolPtrInput `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers IssuerSpecAcmeSolversArrayInput `pulumi:"solvers"`
}

func (IssuerSpecAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcme)(nil)).Elem()
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput {
	return i.ToIssuerSpecAcmeOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmeOutputWithContext(ctx context.Context) IssuerSpecAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeOutput)
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return i.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeOutput).ToIssuerSpecAcmePtrOutputWithContext(ctx)
}

// IssuerSpecAcmePtrInput is an input type that accepts IssuerSpecAcmeArgs, IssuerSpecAcmePtr and IssuerSpecAcmePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePtrInput` via:
//
//          IssuerSpecAcmeArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput
	ToIssuerSpecAcmePtrOutputWithContext(context.Context) IssuerSpecAcmePtrOutput
}

type issuerSpecAcmePtrType IssuerSpecAcmeArgs

func IssuerSpecAcmePtr(v *IssuerSpecAcmeArgs) IssuerSpecAcmePtrInput {	return (*issuerSpecAcmePtrType)(v)
}

func (*issuerSpecAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcme)(nil)).Elem()
}

func (i *issuerSpecAcmePtrType) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return i.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmePtrType) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type IssuerSpecAcmeOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcme)(nil)).Elem()
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput {
	return o
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmeOutputWithContext(ctx context.Context) IssuerSpecAcmeOutput {
	return o
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return o.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *IssuerSpecAcme {
		return &v
	}).(IssuerSpecAcmePtrOutput)
}
// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o IssuerSpecAcmeOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcme) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o IssuerSpecAcmeOutput) ExternalAccountBinding() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcme) *IssuerSpecAcmeExternalAccountBinding { return v.ExternalAccountBinding }).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o IssuerSpecAcmeOutput) PrivateKeySecretRef() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func (v IssuerSpecAcme) IssuerSpecAcmePrivateKeySecretRef { return v.PrivateKeySecretRef }).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o IssuerSpecAcmeOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcme) string { return v.Server }).(pulumi.StringOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o IssuerSpecAcmeOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcme) *bool { return v.SkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o IssuerSpecAcmeOutput) Solvers() IssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcme) []IssuerSpecAcmeSolvers { return v.Solvers }).(IssuerSpecAcmeSolversArrayOutput)
}

type IssuerSpecAcmePtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcme)(nil)).Elem()
}

func (o IssuerSpecAcmePtrOutput) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return o
}

func (o IssuerSpecAcmePtrOutput) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return o
}

func (o IssuerSpecAcmePtrOutput) Elem() IssuerSpecAcmeOutput {
	return o.ApplyT(func (v *IssuerSpecAcme) IssuerSpecAcme { return *v }).(IssuerSpecAcmeOutput)
}

// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o IssuerSpecAcmePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o IssuerSpecAcmePtrOutput) ExternalAccountBinding() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcme) *IssuerSpecAcmeExternalAccountBinding {
		if v == nil {
			return nil
		}
		return v.ExternalAccountBinding
	}).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o IssuerSpecAcmePtrOutput) PrivateKeySecretRef() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcme) *IssuerSpecAcmePrivateKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.PrivateKeySecretRef
	}).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o IssuerSpecAcmePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o IssuerSpecAcmePtrOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.SkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o IssuerSpecAcmePtrOutput) Solvers() IssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcme) []IssuerSpecAcmeSolvers {
		if v == nil {
			return nil
		}
		return v.Solvers
	}).(IssuerSpecAcmeSolversArrayOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBinding struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID string `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef IssuerSpecAcmeExternalAccountBindingKeySecretRef `pulumi:"keySecretRef"`
}

// IssuerSpecAcmeExternalAccountBindingInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingArgs and IssuerSpecAcmeExternalAccountBindingOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingArgs{...}
type IssuerSpecAcmeExternalAccountBindingInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput
	ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingOutput
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBindingArgs struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID pulumi.StringInput `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef IssuerSpecAcmeExternalAccountBindingKeySecretRefInput `pulumi:"keySecretRef"`
}

func (IssuerSpecAcmeExternalAccountBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingOutput)
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingOutput).ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeExternalAccountBindingPtrInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingArgs, IssuerSpecAcmeExternalAccountBindingPtr and IssuerSpecAcmeExternalAccountBindingPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingPtrInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeExternalAccountBindingPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput
	ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput
}

type issuerSpecAcmeExternalAccountBindingPtrType IssuerSpecAcmeExternalAccountBindingArgs

func IssuerSpecAcmeExternalAccountBindingPtr(v *IssuerSpecAcmeExternalAccountBindingArgs) IssuerSpecAcmeExternalAccountBindingPtrInput {	return (*issuerSpecAcmeExternalAccountBindingPtrType)(v)
}

func (*issuerSpecAcmeExternalAccountBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i *issuerSpecAcmeExternalAccountBindingPtrType) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeExternalAccountBindingPtrType) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBindingOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) *IssuerSpecAcmeExternalAccountBinding {
		return &v
	}).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}
// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeExternalAccountBinding) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeyID() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeExternalAccountBinding) string { return v.KeyID }).(pulumi.StringOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeySecretRef() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func (v IssuerSpecAcmeExternalAccountBinding) IssuerSpecAcmeExternalAccountBindingKeySecretRef { return v.KeySecretRef }).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

type IssuerSpecAcmeExternalAccountBindingPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) Elem() IssuerSpecAcmeExternalAccountBindingOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeExternalAccountBinding) IssuerSpecAcmeExternalAccountBinding { return *v }).(IssuerSpecAcmeExternalAccountBindingOutput)
}

// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyID
	}).(pulumi.StringPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeySecretRef() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeExternalAccountBinding) *IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.KeySecretRef
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeExternalAccountBindingKeySecretRefInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs and IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingKeySecretRefInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
type IssuerSpecAcmeExternalAccountBindingKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput).ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs, IssuerSpecAcmeExternalAccountBindingKeySecretRefPtr and IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
}

type issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs

func IssuerSpecAcmeExternalAccountBindingKeySecretRefPtr(v *IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput {	return (*issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBindingKeySecretRef) *IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return &v
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeExternalAccountBindingKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Elem() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) IssuerSpecAcmeExternalAccountBindingKeySecretRef { return *v }).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmePrivateKeySecretRefInput is an input type that accepts IssuerSpecAcmePrivateKeySecretRefArgs and IssuerSpecAcmePrivateKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePrivateKeySecretRefInput` via:
//
//          IssuerSpecAcmePrivateKeySecretRefArgs{...}
type IssuerSpecAcmePrivateKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput
	ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmePrivateKeySecretRefOutput
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmePrivateKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefOutput).ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmePrivateKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmePrivateKeySecretRefArgs, IssuerSpecAcmePrivateKeySecretRefPtr and IssuerSpecAcmePrivateKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePrivateKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmePrivateKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmePrivateKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput
	ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput
}

type issuerSpecAcmePrivateKeySecretRefPtrType IssuerSpecAcmePrivateKeySecretRefArgs

func IssuerSpecAcmePrivateKeySecretRefPtr(v *IssuerSpecAcmePrivateKeySecretRefArgs) IssuerSpecAcmePrivateKeySecretRefPtrInput {	return (*issuerSpecAcmePrivateKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmePrivateKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmePrivateKeySecretRefPtrType) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmePrivateKeySecretRefPtrType) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmePrivateKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmePrivateKeySecretRef) *IssuerSpecAcmePrivateKeySecretRef {
		return &v
	}).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmePrivateKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmePrivateKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmePrivateKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmePrivateKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmePrivateKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmePrivateKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Elem() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmePrivateKeySecretRef) IssuerSpecAcmePrivateKeySecretRef { return *v }).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type IssuerSpecAcmeSolvers struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 *IssuerSpecAcmeSolversDns01 `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 *IssuerSpecAcmeSolversHttp01 `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector *IssuerSpecAcmeSolversSelector `pulumi:"selector"`
}

// IssuerSpecAcmeSolversInput is an input type that accepts IssuerSpecAcmeSolversArgs and IssuerSpecAcmeSolversOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversInput` via:
//
//          IssuerSpecAcmeSolversArgs{...}
type IssuerSpecAcmeSolversInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput
	ToIssuerSpecAcmeSolversOutputWithContext(context.Context) IssuerSpecAcmeSolversOutput
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type IssuerSpecAcmeSolversArgs struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 IssuerSpecAcmeSolversDns01PtrInput `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 IssuerSpecAcmeSolversHttp01PtrInput `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector IssuerSpecAcmeSolversSelectorPtrInput `pulumi:"selector"`
}

func (IssuerSpecAcmeSolversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversArgs) ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput {
	return i.ToIssuerSpecAcmeSolversOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversArgs) ToIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversOutput)
}

// IssuerSpecAcmeSolversArrayInput is an input type that accepts IssuerSpecAcmeSolversArray and IssuerSpecAcmeSolversArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversArrayInput` via:
//
//          IssuerSpecAcmeSolversArray{ IssuerSpecAcmeSolversArgs{...} }
type IssuerSpecAcmeSolversArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput
	ToIssuerSpecAcmeSolversArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversArrayOutput
}

type IssuerSpecAcmeSolversArray []IssuerSpecAcmeSolversInput

func (IssuerSpecAcmeSolversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversArray) ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput {
	return i.ToIssuerSpecAcmeSolversArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversArray) ToIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversArrayOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type IssuerSpecAcmeSolversOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversOutput) ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput {
	return o
}

func (o IssuerSpecAcmeSolversOutput) ToIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversOutput {
	return o
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
func (o IssuerSpecAcmeSolversOutput) Dns01() IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversDns01 { return v.Dns01 }).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
func (o IssuerSpecAcmeSolversOutput) Http01() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversHttp01 { return v.Http01 }).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
func (o IssuerSpecAcmeSolversOutput) Selector() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversSelector { return v.Selector }).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

type IssuerSpecAcmeSolversArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversArrayOutput) ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversArrayOutput) ToIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolvers {
		return vs[0].([]IssuerSpecAcmeSolvers)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01 struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns *IssuerSpecAcmeSolversDns01Acmedns `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai *IssuerSpecAcmeSolversDns01Akamai `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns *IssuerSpecAcmeSolversDns01Azuredns `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns *IssuerSpecAcmeSolversDns01Clouddns `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare *IssuerSpecAcmeSolversDns01Cloudflare `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy *string `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean *IssuerSpecAcmeSolversDns01Digitalocean `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 *IssuerSpecAcmeSolversDns01Rfc2136 `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 *IssuerSpecAcmeSolversDns01Route53 `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook *IssuerSpecAcmeSolversDns01Webhook `pulumi:"webhook"`
}

// IssuerSpecAcmeSolversDns01Input is an input type that accepts IssuerSpecAcmeSolversDns01Args and IssuerSpecAcmeSolversDns01Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Input` via:
//
//          IssuerSpecAcmeSolversDns01Args{...}
type IssuerSpecAcmeSolversDns01Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output
	ToIssuerSpecAcmeSolversDns01OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01Args struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns IssuerSpecAcmeSolversDns01AcmednsPtrInput `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai IssuerSpecAcmeSolversDns01AkamaiPtrInput `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns IssuerSpecAcmeSolversDns01AzurednsPtrInput `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns IssuerSpecAcmeSolversDns01ClouddnsPtrInput `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare IssuerSpecAcmeSolversDns01CloudflarePtrInput `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy pulumi.StringPtrInput `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean IssuerSpecAcmeSolversDns01DigitaloceanPtrInput `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 IssuerSpecAcmeSolversDns01Rfc2136PtrInput `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 IssuerSpecAcmeSolversDns01Route53PtrInput `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook IssuerSpecAcmeSolversDns01WebhookPtrInput `pulumi:"webhook"`
}

func (IssuerSpecAcmeSolversDns01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output {
	return i.ToIssuerSpecAcmeSolversDns01OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Output)
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Output).ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Args, IssuerSpecAcmeSolversDns01Ptr and IssuerSpecAcmeSolversDns01PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01PtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput
	ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01PtrOutput
}

type issuerSpecAcmeSolversDns01PtrType IssuerSpecAcmeSolversDns01Args

func IssuerSpecAcmeSolversDns01Ptr(v *IssuerSpecAcmeSolversDns01Args) IssuerSpecAcmeSolversDns01PtrInput {	return (*issuerSpecAcmeSolversDns01PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01PtrType) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01PtrType) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01Output struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01 {
		return &v
	}).(IssuerSpecAcmeSolversDns01PtrOutput)
}
// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Acmedns() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Acmedns { return v.Acmedns }).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Akamai() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Akamai { return v.Akamai }).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Azuredns() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Azuredns { return v.Azuredns }).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Clouddns() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Clouddns { return v.Clouddns }).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Cloudflare() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Cloudflare { return v.Cloudflare }).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o IssuerSpecAcmeSolversDns01Output) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *string { return v.CnameStrategy }).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Digitalocean() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Digitalocean { return v.Digitalocean }).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Rfc2136() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Rfc2136 { return v.Rfc2136 }).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Route53() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Route53 { return v.Route53 }).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Webhook() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Webhook { return v.Webhook }).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

type IssuerSpecAcmeSolversDns01PtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) Elem() IssuerSpecAcmeSolversDns01Output {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) IssuerSpecAcmeSolversDns01 { return *v }).(IssuerSpecAcmeSolversDns01Output)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Acmedns() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Acmedns {
		if v == nil {
			return nil
		}
		return v.Acmedns
	}).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Akamai() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Akamai {
		if v == nil {
			return nil
		}
		return v.Akamai
	}).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Azuredns() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Azuredns {
		if v == nil {
			return nil
		}
		return v.Azuredns
	}).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Clouddns() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Clouddns {
		if v == nil {
			return nil
		}
		return v.Clouddns
	}).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Cloudflare() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Cloudflare {
		if v == nil {
			return nil
		}
		return v.Cloudflare
	}).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o IssuerSpecAcmeSolversDns01PtrOutput) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *string {
		if v == nil {
			return nil
		}
		return v.CnameStrategy
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Digitalocean() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Digitalocean {
		if v == nil {
			return nil
		}
		return v.Digitalocean
	}).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Rfc2136() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Rfc2136 {
		if v == nil {
			return nil
		}
		return v.Rfc2136
	}).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Route53() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Route53 {
		if v == nil {
			return nil
		}
		return v.Route53
	}).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Webhook() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Webhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Acmedns struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef `pulumi:"accountSecretRef"`
	Host string `pulumi:"host"`
}

// IssuerSpecAcmeSolversDns01AcmednsInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsArgs and IssuerSpecAcmeSolversDns01AcmednsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsArgs{...}
type IssuerSpecAcmeSolversDns01AcmednsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsOutput() IssuerSpecAcmeSolversDns01AcmednsOutput
	ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsOutput
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AcmednsArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput `pulumi:"accountSecretRef"`
	Host pulumi.StringInput `pulumi:"host"`
}

func (IssuerSpecAcmeSolversDns01AcmednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsOutput() IssuerSpecAcmeSolversDns01AcmednsOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsOutput)
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsOutput).ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AcmednsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsArgs, IssuerSpecAcmeSolversDns01AcmednsPtr and IssuerSpecAcmeSolversDns01AcmednsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AcmednsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput
	ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput
}

type issuerSpecAcmeSolversDns01AcmednsPtrType IssuerSpecAcmeSolversDns01AcmednsArgs

func IssuerSpecAcmeSolversDns01AcmednsPtr(v *IssuerSpecAcmeSolversDns01AcmednsArgs) IssuerSpecAcmeSolversDns01AcmednsPtrInput {	return (*issuerSpecAcmeSolversDns01AcmednsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AcmednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AcmednsPtrType) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AcmednsPtrType) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AcmednsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsOutput() IssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Acmedns) *IssuerSpecAcmeSolversDns01Acmedns {
		return &v
	}).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}
// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AcmednsOutput) AccountSecretRef() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Acmedns) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef { return v.AccountSecretRef }).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Acmedns) string { return v.Host }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AcmednsPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) Elem() IssuerSpecAcmeSolversDns01AcmednsOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Acmedns) IssuerSpecAcmeSolversDns01Acmedns { return *v }).(IssuerSpecAcmeSolversDns01AcmednsOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) AccountSecretRef() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Acmedns) *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccountSecretRef
	}).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Acmedns) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs and IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput).ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs, IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr and IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs

func IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr(v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef { return *v }).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Akamai struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain string `pulumi:"serviceConsumerDomain"`
}

// IssuerSpecAcmeSolversDns01AkamaiInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiArgs and IssuerSpecAcmeSolversDns01AkamaiOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput
	ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AkamaiArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain pulumi.StringInput `pulumi:"serviceConsumerDomain"`
}

func (IssuerSpecAcmeSolversDns01AkamaiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiOutput).ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiArgs, IssuerSpecAcmeSolversDns01AkamaiPtr and IssuerSpecAcmeSolversDns01AkamaiPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiPtrType IssuerSpecAcmeSolversDns01AkamaiArgs

func IssuerSpecAcmeSolversDns01AkamaiPtr(v *IssuerSpecAcmeSolversDns01AkamaiArgs) IssuerSpecAcmeSolversDns01AkamaiPtrInput {	return (*issuerSpecAcmeSolversDns01AkamaiPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiPtrType) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiPtrType) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AkamaiOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01Akamai {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}
// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) AccessTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef { return v.AccessTokenSecretRef }).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef { return v.ClientSecretSecretRef }).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ClientTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef { return v.ClientTokenSecretRef }).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ServiceConsumerDomain() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Akamai) string { return v.ServiceConsumerDomain }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01Akamai { return *v }).(IssuerSpecAcmeSolversDns01AkamaiOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) AccessTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ServiceConsumerDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Akamai) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceConsumerDomain
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef { return *v }).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef { return *v }).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef { return *v }).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Azuredns struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID *string `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	Environment *string `pulumi:"environment"`
	HostedZoneName *string `pulumi:"hostedZoneName"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	SubscriptionID string `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID *string `pulumi:"tenantID"`
}

// IssuerSpecAcmeSolversDns01AzurednsInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsArgs and IssuerSpecAcmeSolversDns01AzurednsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsArgs{...}
type IssuerSpecAcmeSolversDns01AzurednsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsOutput() IssuerSpecAcmeSolversDns01AzurednsOutput
	ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsOutput
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AzurednsArgs struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID pulumi.StringPtrInput `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput `pulumi:"clientSecretSecretRef"`
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	SubscriptionID pulumi.StringInput `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (IssuerSpecAcmeSolversDns01AzurednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsOutput() IssuerSpecAcmeSolversDns01AzurednsOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsOutput)
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsOutput).ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AzurednsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsArgs, IssuerSpecAcmeSolversDns01AzurednsPtr and IssuerSpecAcmeSolversDns01AzurednsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AzurednsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput
	ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput
}

type issuerSpecAcmeSolversDns01AzurednsPtrType IssuerSpecAcmeSolversDns01AzurednsArgs

func IssuerSpecAcmeSolversDns01AzurednsPtr(v *IssuerSpecAcmeSolversDns01AzurednsArgs) IssuerSpecAcmeSolversDns01AzurednsPtrInput {	return (*issuerSpecAcmeSolversDns01AzurednsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AzurednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AzurednsPtrType) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AzurednsPtrType) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AzurednsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsOutput() IssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) *IssuerSpecAcmeSolversDns01Azuredns {
		return &v
	}).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}
// if both this and ClientSecret are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.ClientID }).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Azuredns) *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef { return v.ClientSecretSecretRef }).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Azuredns) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) SubscriptionID() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Azuredns) string { return v.SubscriptionID }).(pulumi.StringOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o IssuerSpecAcmeSolversDns01AzurednsOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversDns01AzurednsPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) Elem() IssuerSpecAcmeSolversDns01AzurednsOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) IssuerSpecAcmeSolversDns01Azuredns { return *v }).(IssuerSpecAcmeSolversDns01AzurednsOutput)
}

// if both this and ClientSecret are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.ClientID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) SubscriptionID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionID
	}).(pulumi.StringPtrOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs and IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
}

// if both this and ClientID are left unset MSI will be used
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs, IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr and IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef { return *v }).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Clouddns struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName *string `pulumi:"hostedZoneName"`
	Project string `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef `pulumi:"serviceAccountSecretRef"`
}

// IssuerSpecAcmeSolversDns01ClouddnsInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsArgs and IssuerSpecAcmeSolversDns01ClouddnsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsArgs{...}
type IssuerSpecAcmeSolversDns01ClouddnsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsOutput() IssuerSpecAcmeSolversDns01ClouddnsOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsOutput
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01ClouddnsArgs struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	Project pulumi.StringInput `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput `pulumi:"serviceAccountSecretRef"`
}

func (IssuerSpecAcmeSolversDns01ClouddnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsOutput() IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsOutput)
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsOutput).ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01ClouddnsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsArgs, IssuerSpecAcmeSolversDns01ClouddnsPtr and IssuerSpecAcmeSolversDns01ClouddnsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01ClouddnsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput
}

type issuerSpecAcmeSolversDns01ClouddnsPtrType IssuerSpecAcmeSolversDns01ClouddnsArgs

func IssuerSpecAcmeSolversDns01ClouddnsPtr(v *IssuerSpecAcmeSolversDns01ClouddnsArgs) IssuerSpecAcmeSolversDns01ClouddnsPtrInput {	return (*issuerSpecAcmeSolversDns01ClouddnsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01ClouddnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01ClouddnsPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01ClouddnsPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01ClouddnsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsOutput() IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Clouddns) *IssuerSpecAcmeSolversDns01Clouddns {
		return &v
	}).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}
// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Clouddns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Clouddns) string { return v.Project }).(pulumi.StringOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ServiceAccountSecretRef() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Clouddns) *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef { return v.ServiceAccountSecretRef }).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01ClouddnsPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Elem() IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Clouddns) IssuerSpecAcmeSolversDns01Clouddns { return *v }).(IssuerSpecAcmeSolversDns01ClouddnsOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ServiceAccountSecretRef() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Clouddns) *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountSecretRef
	}).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs and IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput).ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs, IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr and IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs

func IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr(v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef { return *v }).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Cloudflare struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email *string `pulumi:"email"`
}

// IssuerSpecAcmeSolversDns01CloudflareInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareArgs and IssuerSpecAcmeSolversDns01CloudflareOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput
	ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudflareArgs struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email pulumi.StringPtrInput `pulumi:"email"`
}

func (IssuerSpecAcmeSolversDns01CloudflareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareOutput).ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflarePtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareArgs, IssuerSpecAcmeSolversDns01CloudflarePtr and IssuerSpecAcmeSolversDns01CloudflarePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflarePtrInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01CloudflarePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput
}

type issuerSpecAcmeSolversDns01CloudflarePtrType IssuerSpecAcmeSolversDns01CloudflareArgs

func IssuerSpecAcmeSolversDns01CloudflarePtr(v *IssuerSpecAcmeSolversDns01CloudflareArgs) IssuerSpecAcmeSolversDns01CloudflarePtrInput {	return (*issuerSpecAcmeSolversDns01CloudflarePtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflarePtrType) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflarePtrType) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudflareOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01Cloudflare {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}
// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ApiKeySecretRef() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef { return v.ApiKeySecretRef }).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ApiTokenSecretRef() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef { return v.ApiTokenSecretRef }).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Cloudflare) *string { return v.Email }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversDns01CloudflarePtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Cloudflare) IssuerSpecAcmeSolversDns01Cloudflare { return *v }).(IssuerSpecAcmeSolversDns01CloudflareOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiKeySecretRef() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.ApiKeySecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiTokenSecretRef() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.ApiTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Cloudflare) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs and IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput).ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs, IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr and IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs

func IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef { return *v }).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs and IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs, IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr and IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef { return *v }).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Digitalocean struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef `pulumi:"tokenSecretRef"`
}

// IssuerSpecAcmeSolversDns01DigitaloceanInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanArgs and IssuerSpecAcmeSolversDns01DigitaloceanOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
type IssuerSpecAcmeSolversDns01DigitaloceanInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01DigitaloceanArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput `pulumi:"tokenSecretRef"`
}

func (IssuerSpecAcmeSolversDns01DigitaloceanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanOutput).ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01DigitaloceanPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanArgs, IssuerSpecAcmeSolversDns01DigitaloceanPtr and IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01DigitaloceanPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
}

type issuerSpecAcmeSolversDns01DigitaloceanPtrType IssuerSpecAcmeSolversDns01DigitaloceanArgs

func IssuerSpecAcmeSolversDns01DigitaloceanPtr(v *IssuerSpecAcmeSolversDns01DigitaloceanArgs) IssuerSpecAcmeSolversDns01DigitaloceanPtrInput {	return (*issuerSpecAcmeSolversDns01DigitaloceanPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01DigitaloceanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01DigitaloceanOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Digitalocean) *IssuerSpecAcmeSolversDns01Digitalocean {
		return &v
	}).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}
// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) TokenSecretRef() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Digitalocean) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef { return v.TokenSecretRef }).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

type IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) Elem() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Digitalocean) IssuerSpecAcmeSolversDns01Digitalocean { return *v }).(IssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) TokenSecretRef() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Digitalocean) *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.TokenSecretRef
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs and IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs, IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr and IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef { return *v }).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136 struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver string `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm *string `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName *string `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef `pulumi:"tsigSecretSecretRef"`
}

// IssuerSpecAcmeSolversDns01Rfc2136Input is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136Args and IssuerSpecAcmeSolversDns01Rfc2136Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136Input` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136Args{...}
type IssuerSpecAcmeSolversDns01Rfc2136Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output
	ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136Args struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver pulumi.StringInput `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm pulumi.StringPtrInput `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName pulumi.StringPtrInput `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput `pulumi:"tsigSecretSecretRef"`
}

func (IssuerSpecAcmeSolversDns01Rfc2136Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136Output)
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136Output).ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Rfc2136PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136Args, IssuerSpecAcmeSolversDns01Rfc2136Ptr and IssuerSpecAcmeSolversDns01Rfc2136PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136PtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Rfc2136PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput
}

type issuerSpecAcmeSolversDns01Rfc2136PtrType IssuerSpecAcmeSolversDns01Rfc2136Args

func IssuerSpecAcmeSolversDns01Rfc2136Ptr(v *IssuerSpecAcmeSolversDns01Rfc2136Args) IssuerSpecAcmeSolversDns01Rfc2136PtrInput {	return (*issuerSpecAcmeSolversDns01Rfc2136PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Rfc2136PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Rfc2136PtrType) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Rfc2136PtrType) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136Output struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136 {
		return &v
	}).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}
// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) Nameserver() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Rfc2136) string { return v.Nameserver }).(pulumi.StringOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigAlgorithm }).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigKeyName }).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigSecretSecretRef() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef { return v.TsigSecretSecretRef }).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01Rfc2136PtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Elem() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136) IssuerSpecAcmeSolversDns01Rfc2136 { return *v }).(IssuerSpecAcmeSolversDns01Rfc2136Output)
}

// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Nameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return &v.Nameserver
	}).(pulumi.StringPtrOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigKeyName
	}).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigSecretSecretRef() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.TsigSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs and IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs, IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr and IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef { return *v }).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53 struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID *string `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID *string `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region string `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role *string `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// IssuerSpecAcmeSolversDns01Route53Input is an input type that accepts IssuerSpecAcmeSolversDns01Route53Args and IssuerSpecAcmeSolversDns01Route53Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53Input` via:
//
//          IssuerSpecAcmeSolversDns01Route53Args{...}
type IssuerSpecAcmeSolversDns01Route53Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output
	ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53Output
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53Args struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID pulumi.StringPtrInput `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID pulumi.StringPtrInput `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region pulumi.StringInput `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (IssuerSpecAcmeSolversDns01Route53Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output {
	return i.ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53Output)
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53Output).ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53Args, IssuerSpecAcmeSolversDns01Route53Ptr and IssuerSpecAcmeSolversDns01Route53PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53PtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Route53Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Route53PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput
	ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput
}

type issuerSpecAcmeSolversDns01Route53PtrType IssuerSpecAcmeSolversDns01Route53Args

func IssuerSpecAcmeSolversDns01Route53Ptr(v *IssuerSpecAcmeSolversDns01Route53Args) IssuerSpecAcmeSolversDns01Route53PtrInput {	return (*issuerSpecAcmeSolversDns01Route53PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53PtrType) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53PtrType) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53Output struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53 {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}
// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53Output) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Route53) *string { return v.AccessKeyID }).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o IssuerSpecAcmeSolversDns01Route53Output) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Route53) *string { return v.HostedZoneID }).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o IssuerSpecAcmeSolversDns01Route53Output) Region() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Route53) string { return v.Region }).(pulumi.StringOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o IssuerSpecAcmeSolversDns01Route53Output) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Route53) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53Output) SecretAccessKeySecretRef() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef { return v.SecretAccessKeySecretRef }).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01Route53PtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53Output {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53) IssuerSpecAcmeSolversDns01Route53 { return *v }).(IssuerSpecAcmeSolversDns01Route53Output)
}

// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyID
	}).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneID
	}).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) SecretAccessKeySecretRef() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs and IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput).ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs, IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr and IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs

func IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput {	return (*issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef { return *v }).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Webhook struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config map[string]interface{} `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName string `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName string `pulumi:"solverName"`
}

// IssuerSpecAcmeSolversDns01WebhookInput is an input type that accepts IssuerSpecAcmeSolversDns01WebhookArgs and IssuerSpecAcmeSolversDns01WebhookOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01WebhookInput` via:
//
//          IssuerSpecAcmeSolversDns01WebhookArgs{...}
type IssuerSpecAcmeSolversDns01WebhookInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput
	ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01WebhookOutput
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01WebhookArgs struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config pulumi.MapInput `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName pulumi.StringInput `pulumi:"solverName"`
}

func (IssuerSpecAcmeSolversDns01WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookOutput)
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookOutput).ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01WebhookPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01WebhookArgs, IssuerSpecAcmeSolversDns01WebhookPtr and IssuerSpecAcmeSolversDns01WebhookPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01WebhookPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01WebhookArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01WebhookPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput
	ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput
}

type issuerSpecAcmeSolversDns01WebhookPtrType IssuerSpecAcmeSolversDns01WebhookArgs

func IssuerSpecAcmeSolversDns01WebhookPtr(v *IssuerSpecAcmeSolversDns01WebhookArgs) IssuerSpecAcmeSolversDns01WebhookPtrInput {	return (*issuerSpecAcmeSolversDns01WebhookPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01WebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01WebhookPtrType) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01WebhookPtrType) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01WebhookOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) *IssuerSpecAcmeSolversDns01Webhook {
		return &v
	}).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}
// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Webhook) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Webhook) string { return v.GroupName }).(pulumi.StringOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) SolverName() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversDns01Webhook) string { return v.SolverName }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01WebhookPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01WebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) Elem() IssuerSpecAcmeSolversDns01WebhookOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Webhook) IssuerSpecAcmeSolversDns01Webhook { return *v }).(IssuerSpecAcmeSolversDns01WebhookOutput)
}

// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Webhook) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.GroupName
	}).(pulumi.StringPtrOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) SolverName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.SolverName
	}).(pulumi.StringPtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01 struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress *IssuerSpecAcmeSolversHttp01Ingress `pulumi:"ingress"`
}

// IssuerSpecAcmeSolversHttp01Input is an input type that accepts IssuerSpecAcmeSolversHttp01Args and IssuerSpecAcmeSolversHttp01Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01Input` via:
//
//          IssuerSpecAcmeSolversHttp01Args{...}
type IssuerSpecAcmeSolversHttp01Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output
	ToIssuerSpecAcmeSolversHttp01OutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01Args struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress IssuerSpecAcmeSolversHttp01IngressPtrInput `pulumi:"ingress"`
}

func (IssuerSpecAcmeSolversHttp01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output {
	return i.ToIssuerSpecAcmeSolversHttp01OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01Output)
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01Output).ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01PtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01Args, IssuerSpecAcmeSolversHttp01Ptr and IssuerSpecAcmeSolversHttp01PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01PtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput
	ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01PtrOutput
}

type issuerSpecAcmeSolversHttp01PtrType IssuerSpecAcmeSolversHttp01Args

func IssuerSpecAcmeSolversHttp01Ptr(v *IssuerSpecAcmeSolversHttp01Args) IssuerSpecAcmeSolversHttp01PtrInput {	return (*issuerSpecAcmeSolversHttp01PtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01PtrType) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01PtrType) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01Output struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01 {
		return &v
	}).(IssuerSpecAcmeSolversHttp01PtrOutput)
}
// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o IssuerSpecAcmeSolversHttp01Output) Ingress() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01Ingress { return v.Ingress }).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

type IssuerSpecAcmeSolversHttp01PtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) Elem() IssuerSpecAcmeSolversHttp01Output {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01) IssuerSpecAcmeSolversHttp01 { return *v }).(IssuerSpecAcmeSolversHttp01Output)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o IssuerSpecAcmeSolversHttp01PtrOutput) Ingress() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01Ingress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01Ingress struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class *string `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate *IssuerSpecAcmeSolversHttp01IngressIngressTemplate `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name *string `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate *IssuerSpecAcmeSolversHttp01IngressPodTemplate `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType *string `pulumi:"serviceType"`
}

// IssuerSpecAcmeSolversHttp01IngressInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs and IssuerSpecAcmeSolversHttp01IngressOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressArgs{...}
type IssuerSpecAcmeSolversHttp01IngressInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput
	ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressOutput
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressArgs struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (IssuerSpecAcmeSolversHttp01IngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput).ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs, IssuerSpecAcmeSolversHttp01IngressPtr and IssuerSpecAcmeSolversHttp01IngressPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPtrType IssuerSpecAcmeSolversHttp01IngressArgs

func IssuerSpecAcmeSolversHttp01IngressPtr(v *IssuerSpecAcmeSolversHttp01IngressArgs) IssuerSpecAcmeSolversHttp01IngressPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01Ingress {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}
// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate { return v.IngressTemplate }).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate { return v.PodTemplate }).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o IssuerSpecAcmeSolversHttp01IngressOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01Ingress) IssuerSpecAcmeSolversHttp01Ingress { return *v }).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v == nil {
			return nil
		}
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressIngressTemplate struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata `pulumi:"metadata"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput `pulumi:"metadata"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput {	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}
// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata { return v.Metadata }).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) IssuerSpecAcmeSolversHttp01IngressIngressTemplate { return *v }).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}
// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata { return *v }).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressPodTemplate struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec `pulumi:"spec"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput `pulumi:"spec"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr and IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}
// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata { return v.Metadata }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec { return v.Spec }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) IssuerSpecAcmeSolversHttp01IngressPodTemplate { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}
// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec struct {
	// If specified, the pod's scheduling constraints
	Affinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// If specified, the pod's tolerations.
	Tolerations []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations `pulumi:"tolerations"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs struct {
	// If specified, the pod's scheduling constraints
	Affinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// If specified, the pod's tolerations.
	Tolerations IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput `pulumi:"tolerations"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'nodeSelector', 'affinity' and 'tolerations' fields are supported currently. All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}
// If specified, the pod's scheduling constraints
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity { return v.Affinity }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations { return v.Tolerations }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

// If specified, the pod's scheduling constraints
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}
// Describes node affinity scheduling rules for the pod.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity { return v.NodeAffinity }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity { return v.PodAffinity }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity { return v.PodAntiAffinity }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}
// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution { return v.PreferredDuringSchedulingIgnoredDuringExecution }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution { return v.RequiredDuringSchedulingIgnoredDuringExecution }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference { return v.Preference }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int { return v.Weight }).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions { return v.MatchExpressions }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields { return v.MatchFields }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}
// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms { return v.NodeSelectorTerms }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions { return v.MatchExpressions }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields { return v.MatchFields }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string { return v.Key }).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string { return v.Operator }).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}
// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution { return v.PreferredDuringSchedulingIgnoredDuringExecution }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution { return v.RequiredDuringSchedulingIgnoredDuringExecution }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm { return v.PodAffinityTerm }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int { return v.Weight }).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return v.LabelSelector }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string { return v.TopologyKey }).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions { return v.MatchExpressions }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return v.LabelSelector }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string { return v.TopologyKey }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions { return v.MatchExpressions }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}
// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution { return v.PreferredDuringSchedulingIgnoredDuringExecution }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution { return v.RequiredDuringSchedulingIgnoredDuringExecution }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm { return v.PodAffinityTerm }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int { return v.Weight }).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return v.LabelSelector }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string { return v.TopologyKey }).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions { return v.MatchExpressions }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return v.LabelSelector }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string { return v.TopologyKey }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}
// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions { return v.MatchExpressions }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector { return *v }).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type IssuerSpecAcmeSolversSelector struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames []string `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones []string `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversSelectorInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs and IssuerSpecAcmeSolversSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorInput` via:
//
//          IssuerSpecAcmeSolversSelectorArgs{...}
type IssuerSpecAcmeSolversSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput
	ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorOutput
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type IssuerSpecAcmeSolversSelectorArgs struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones pulumi.StringArrayInput `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return i.ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput)
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput).ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs, IssuerSpecAcmeSolversSelectorPtr and IssuerSpecAcmeSolversSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput
	ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorPtrOutput
}

type issuerSpecAcmeSolversSelectorPtrType IssuerSpecAcmeSolversSelectorArgs

func IssuerSpecAcmeSolversSelectorPtr(v *IssuerSpecAcmeSolversSelectorArgs) IssuerSpecAcmeSolversSelectorPtrInput {	return (*issuerSpecAcmeSolversSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type IssuerSpecAcmeSolversSelectorOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) *IssuerSpecAcmeSolversSelector {
		return &v
	}).(IssuerSpecAcmeSolversSelectorPtrOutput)
}
// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversSelector) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversSelector) []string { return v.DnsZones }).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v IssuerSpecAcmeSolversSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversSelectorPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) Elem() IssuerSpecAcmeSolversSelectorOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversSelector) IssuerSpecAcmeSolversSelector { return *v }).(IssuerSpecAcmeSolversSelectorOutput)
}

// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsZones
	}).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func (v *IssuerSpecAcmeSolversSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCa struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName string `pulumi:"secretName"`
}

// IssuerSpecCaInput is an input type that accepts IssuerSpecCaArgs and IssuerSpecCaOutput values.
// You can construct a concrete instance of `IssuerSpecCaInput` via:
//
//          IssuerSpecCaArgs{...}
type IssuerSpecCaInput interface {
	pulumi.Input

	ToIssuerSpecCaOutput() IssuerSpecCaOutput
	ToIssuerSpecCaOutputWithContext(context.Context) IssuerSpecCaOutput
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (IssuerSpecCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return i.ToIssuerSpecCaOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput)
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput).ToIssuerSpecCaPtrOutputWithContext(ctx)
}

// IssuerSpecCaPtrInput is an input type that accepts IssuerSpecCaArgs, IssuerSpecCaPtr and IssuerSpecCaPtrOutput values.
// You can construct a concrete instance of `IssuerSpecCaPtrInput` via:
//
//          IssuerSpecCaArgs{...}
//
//  or:
//
//          nil
type IssuerSpecCaPtrInput interface {
	pulumi.Input

	ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput
	ToIssuerSpecCaPtrOutputWithContext(context.Context) IssuerSpecCaPtrOutput
}

type issuerSpecCaPtrType IssuerSpecCaArgs

func IssuerSpecCaPtr(v *IssuerSpecCaArgs) IssuerSpecCaPtrInput {	return (*issuerSpecCaPtrType)(v)
}

func (*issuerSpecCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaOutput struct { *pulumi.OutputState }

func (IssuerSpecCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o.ApplyT(func(v IssuerSpecCa) *IssuerSpecCa {
		return &v
	}).(IssuerSpecCaPtrOutput)
}
// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecCa) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o IssuerSpecCaOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecCa) string { return v.SecretName }).(pulumi.StringOutput)
}

type IssuerSpecCaPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) Elem() IssuerSpecCaOutput {
	return o.ApplyT(func (v *IssuerSpecCa) IssuerSpecCa { return *v }).(IssuerSpecCaOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o IssuerSpecCaPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecCa) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type IssuerSpecSelfSigned struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
}

// IssuerSpecSelfSignedInput is an input type that accepts IssuerSpecSelfSignedArgs and IssuerSpecSelfSignedOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedInput` via:
//
//          IssuerSpecSelfSignedArgs{...}
type IssuerSpecSelfSignedInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput
	ToIssuerSpecSelfSignedOutputWithContext(context.Context) IssuerSpecSelfSignedOutput
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
}

func (IssuerSpecSelfSignedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return i.ToIssuerSpecSelfSignedOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput)
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput).ToIssuerSpecSelfSignedPtrOutputWithContext(ctx)
}

// IssuerSpecSelfSignedPtrInput is an input type that accepts IssuerSpecSelfSignedArgs, IssuerSpecSelfSignedPtr and IssuerSpecSelfSignedPtrOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedPtrInput` via:
//
//          IssuerSpecSelfSignedArgs{...}
//
//  or:
//
//          nil
type IssuerSpecSelfSignedPtrInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput
	ToIssuerSpecSelfSignedPtrOutputWithContext(context.Context) IssuerSpecSelfSignedPtrOutput
}

type issuerSpecSelfSignedPtrType IssuerSpecSelfSignedArgs

func IssuerSpecSelfSignedPtr(v *IssuerSpecSelfSignedArgs) IssuerSpecSelfSignedPtrInput {	return (*issuerSpecSelfSignedPtrType)(v)
}

func (*issuerSpecSelfSignedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedOutput struct { *pulumi.OutputState }

func (IssuerSpecSelfSignedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v IssuerSpecSelfSigned) *IssuerSpecSelfSigned {
		return &v
	}).(IssuerSpecSelfSignedPtrOutput)
}
// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v IssuerSpecSelfSigned) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

type IssuerSpecSelfSignedPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecSelfSignedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) Elem() IssuerSpecSelfSignedOutput {
	return o.ApplyT(func (v *IssuerSpecSelfSigned) IssuerSpecSelfSigned { return *v }).(IssuerSpecSelfSignedOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v *IssuerSpecSelfSigned) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type IssuerSpecVault struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth IssuerSpecVaultAuth `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path string `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server string `pulumi:"server"`
}

// IssuerSpecVaultInput is an input type that accepts IssuerSpecVaultArgs and IssuerSpecVaultOutput values.
// You can construct a concrete instance of `IssuerSpecVaultInput` via:
//
//          IssuerSpecVaultArgs{...}
type IssuerSpecVaultInput interface {
	pulumi.Input

	ToIssuerSpecVaultOutput() IssuerSpecVaultOutput
	ToIssuerSpecVaultOutputWithContext(context.Context) IssuerSpecVaultOutput
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type IssuerSpecVaultArgs struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth IssuerSpecVaultAuthInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path pulumi.StringInput `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringInput `pulumi:"server"`
}

func (IssuerSpecVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return i.ToIssuerSpecVaultOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput)
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput).ToIssuerSpecVaultPtrOutputWithContext(ctx)
}

// IssuerSpecVaultPtrInput is an input type that accepts IssuerSpecVaultArgs, IssuerSpecVaultPtr and IssuerSpecVaultPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultPtrInput` via:
//
//          IssuerSpecVaultArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput
	ToIssuerSpecVaultPtrOutputWithContext(context.Context) IssuerSpecVaultPtrOutput
}

type issuerSpecVaultPtrType IssuerSpecVaultArgs

func IssuerSpecVaultPtr(v *IssuerSpecVaultArgs) IssuerSpecVaultPtrInput {	return (*issuerSpecVaultPtrType)(v)
}

func (*issuerSpecVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type IssuerSpecVaultOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVault {
		return &v
	}).(IssuerSpecVaultPtrOutput)
}
// Auth configures how cert-manager authenticates with the Vault server.
func (o IssuerSpecVaultOutput) Auth() IssuerSpecVaultAuthOutput {
	return o.ApplyT(func (v IssuerSpecVault) IssuerSpecVaultAuth { return v.Auth }).(IssuerSpecVaultAuthOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o IssuerSpecVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVault) string { return v.Path }).(pulumi.StringOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVault) string { return v.Server }).(pulumi.StringOutput)
}

type IssuerSpecVaultPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) Elem() IssuerSpecVaultOutput {
	return o.ApplyT(func (v *IssuerSpecVault) IssuerSpecVault { return *v }).(IssuerSpecVaultOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o IssuerSpecVaultPtrOutput) Auth() IssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVault) *IssuerSpecVaultAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(IssuerSpecVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o IssuerSpecVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuth struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole *IssuerSpecVaultAuthAppRole `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes *IssuerSpecVaultAuthKubernetes `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef *IssuerSpecVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
}

// IssuerSpecVaultAuthInput is an input type that accepts IssuerSpecVaultAuthArgs and IssuerSpecVaultAuthOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthInput` via:
//
//          IssuerSpecVaultAuthArgs{...}
type IssuerSpecVaultAuthInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput
	ToIssuerSpecVaultAuthOutputWithContext(context.Context) IssuerSpecVaultAuthOutput
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthArgs struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole IssuerSpecVaultAuthAppRolePtrInput `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes IssuerSpecVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef IssuerSpecVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
}

func (IssuerSpecVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return i.ToIssuerSpecVaultAuthOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput)
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput).ToIssuerSpecVaultAuthPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthPtrInput is an input type that accepts IssuerSpecVaultAuthArgs, IssuerSpecVaultAuthPtr and IssuerSpecVaultAuthPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthPtrInput` via:
//
//          IssuerSpecVaultAuthArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput
	ToIssuerSpecVaultAuthPtrOutputWithContext(context.Context) IssuerSpecVaultAuthPtrOutput
}

type issuerSpecVaultAuthPtrType IssuerSpecVaultAuthArgs

func IssuerSpecVaultAuthPtr(v *IssuerSpecVaultAuthArgs) IssuerSpecVaultAuthPtrInput {	return (*issuerSpecVaultAuthPtrType)(v)
}

func (*issuerSpecVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuth {
		return &v
	}).(IssuerSpecVaultAuthPtrOutput)
}
// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o IssuerSpecVaultAuthOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole { return v.AppRole }).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o IssuerSpecVaultAuthOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes { return v.Kubernetes }).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o IssuerSpecVaultAuthOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef { return v.TokenSecretRef }).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

type IssuerSpecVaultAuthPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) Elem() IssuerSpecVaultAuthOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuth) IssuerSpecVaultAuth { return *v }).(IssuerSpecVaultAuthOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o IssuerSpecVaultAuthPtrOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o IssuerSpecVaultAuthPtrOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o IssuerSpecVaultAuthPtrOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId string `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef IssuerSpecVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// IssuerSpecVaultAuthAppRoleInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs and IssuerSpecVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleInput` via:
//
//          IssuerSpecVaultAuthAppRoleArgs{...}
type IssuerSpecVaultAuthAppRoleInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput
	ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path pulumi.StringInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef IssuerSpecVaultAuthAppRoleSecretRefInput `pulumi:"secretRef"`
}

func (IssuerSpecVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return i.ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput)
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput).ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRolePtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs, IssuerSpecVaultAuthAppRolePtr and IssuerSpecVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRolePtrInput` via:
//
//          IssuerSpecVaultAuthAppRoleArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput
	ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRolePtrOutput
}

type issuerSpecVaultAuthAppRolePtrType IssuerSpecVaultAuthAppRoleArgs

func IssuerSpecVaultAuthAppRolePtr(v *IssuerSpecVaultAuthAppRoleArgs) IssuerSpecVaultAuthAppRolePtrInput {	return (*issuerSpecVaultAuthAppRolePtrType)(v)
}

func (*issuerSpecVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRole {
		return &v
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}
// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o IssuerSpecVaultAuthAppRoleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthAppRole) string { return v.Path }).(pulumi.StringOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o IssuerSpecVaultAuthAppRoleOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthAppRole) IssuerSpecVaultAuthAppRoleSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

type IssuerSpecVaultAuthAppRolePtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) Elem() IssuerSpecVaultAuthAppRoleOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthAppRole) IssuerSpecVaultAuthAppRole { return *v }).(IssuerSpecVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o IssuerSpecVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o IssuerSpecVaultAuthAppRolePtrOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthAppRoleSecretRefInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs and IssuerSpecVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefInput` via:
//
//          IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
type IssuerSpecVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput).ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRoleSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs, IssuerSpecVaultAuthAppRoleSecretRefPtr and IssuerSpecVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefPtrInput` via:
//
//          IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
}

type issuerSpecVaultAuthAppRoleSecretRefPtrType IssuerSpecVaultAuthAppRoleSecretRefArgs

func IssuerSpecVaultAuthAppRoleSecretRefPtr(v *IssuerSpecVaultAuthAppRoleSecretRefArgs) IssuerSpecVaultAuthAppRoleSecretRefPtrInput {	return (*issuerSpecVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) *IssuerSpecVaultAuthAppRoleSecretRef {
		return &v
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthAppRoleSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthAppRoleSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Elem() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthAppRoleSecretRef) IssuerSpecVaultAuthAppRoleSecretRef { return *v }).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetes struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role string `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef IssuerSpecVaultAuthKubernetesSecretRef `pulumi:"secretRef"`
}

// IssuerSpecVaultAuthKubernetesInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs and IssuerSpecVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesInput` via:
//
//          IssuerSpecVaultAuthKubernetesArgs{...}
type IssuerSpecVaultAuthKubernetesInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput
	ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role pulumi.StringInput `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef IssuerSpecVaultAuthKubernetesSecretRefInput `pulumi:"secretRef"`
}

func (IssuerSpecVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return i.ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput)
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput).ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs, IssuerSpecVaultAuthKubernetesPtr and IssuerSpecVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesPtrInput` via:
//
//          IssuerSpecVaultAuthKubernetesArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput
	ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesPtrOutput
}

type issuerSpecVaultAuthKubernetesPtrType IssuerSpecVaultAuthKubernetesArgs

func IssuerSpecVaultAuthKubernetesPtr(v *IssuerSpecVaultAuthKubernetesArgs) IssuerSpecVaultAuthKubernetesPtrInput {	return (*issuerSpecVaultAuthKubernetesPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetes {
		return &v
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}
// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthKubernetes) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthKubernetes) string { return v.Role }).(pulumi.StringOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o IssuerSpecVaultAuthKubernetesOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthKubernetes) IssuerSpecVaultAuthKubernetesSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

type IssuerSpecVaultAuthKubernetesPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) Elem() IssuerSpecVaultAuthKubernetesOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthKubernetes) IssuerSpecVaultAuthKubernetes { return *v }).(IssuerSpecVaultAuthKubernetesOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type IssuerSpecVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesSecretRefInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs and IssuerSpecVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefInput` via:
//
//          IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
type IssuerSpecVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type IssuerSpecVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput).ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs, IssuerSpecVaultAuthKubernetesSecretRefPtr and IssuerSpecVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefPtrInput` via:
//
//          IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
}

type issuerSpecVaultAuthKubernetesSecretRefPtrType IssuerSpecVaultAuthKubernetesSecretRefArgs

func IssuerSpecVaultAuthKubernetesSecretRefPtr(v *IssuerSpecVaultAuthKubernetesSecretRefArgs) IssuerSpecVaultAuthKubernetesSecretRefPtrInput {	return (*issuerSpecVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type IssuerSpecVaultAuthKubernetesSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) *IssuerSpecVaultAuthKubernetesSecretRef {
		return &v
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthKubernetesSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthKubernetesSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Elem() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthKubernetesSecretRef) IssuerSpecVaultAuthKubernetesSecretRef { return *v }).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthTokenSecretRefInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs and IssuerSpecVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefInput` via:
//
//          IssuerSpecVaultAuthTokenSecretRefArgs{...}
type IssuerSpecVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput
	ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput).ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthTokenSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs, IssuerSpecVaultAuthTokenSecretRefPtr and IssuerSpecVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefPtrInput` via:
//
//          IssuerSpecVaultAuthTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput
	ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput
}

type issuerSpecVaultAuthTokenSecretRefPtrType IssuerSpecVaultAuthTokenSecretRefArgs

func IssuerSpecVaultAuthTokenSecretRefPtr(v *IssuerSpecVaultAuthTokenSecretRefArgs) IssuerSpecVaultAuthTokenSecretRefPtrInput {	return (*issuerSpecVaultAuthTokenSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) *IssuerSpecVaultAuthTokenSecretRef {
		return &v
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVaultAuthTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Elem() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthTokenSecretRef) IssuerSpecVaultAuthTokenSecretRef { return *v }).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type IssuerSpecVenafi struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud *IssuerSpecVenafiCloud `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp *IssuerSpecVenafiTpp `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone string `pulumi:"zone"`
}

// IssuerSpecVenafiInput is an input type that accepts IssuerSpecVenafiArgs and IssuerSpecVenafiOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiInput` via:
//
//          IssuerSpecVenafiArgs{...}
type IssuerSpecVenafiInput interface {
	pulumi.Input

	ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput
	ToIssuerSpecVenafiOutputWithContext(context.Context) IssuerSpecVenafiOutput
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type IssuerSpecVenafiArgs struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud IssuerSpecVenafiCloudPtrInput `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp IssuerSpecVenafiTppPtrInput `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (IssuerSpecVenafiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return i.ToIssuerSpecVenafiOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput)
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput).ToIssuerSpecVenafiPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiPtrInput is an input type that accepts IssuerSpecVenafiArgs, IssuerSpecVenafiPtr and IssuerSpecVenafiPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiPtrInput` via:
//
//          IssuerSpecVenafiArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput
	ToIssuerSpecVenafiPtrOutputWithContext(context.Context) IssuerSpecVenafiPtrOutput
}

type issuerSpecVenafiPtrType IssuerSpecVenafiArgs

func IssuerSpecVenafiPtr(v *IssuerSpecVenafiArgs) IssuerSpecVenafiPtrInput {	return (*issuerSpecVenafiPtrType)(v)
}

func (*issuerSpecVenafiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type IssuerSpecVenafiOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafi {
		return &v
	}).(IssuerSpecVenafiPtrOutput)
}
// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func (v IssuerSpecVenafi) *IssuerSpecVenafiCloud { return v.Cloud }).(IssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func (v IssuerSpecVenafi) *IssuerSpecVenafiTpp { return v.Tpp }).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o IssuerSpecVenafiOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVenafi) string { return v.Zone }).(pulumi.StringOutput)
}

type IssuerSpecVenafiPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) Elem() IssuerSpecVenafiOutput {
	return o.ApplyT(func (v *IssuerSpecVenafi) IssuerSpecVenafi { return *v }).(IssuerSpecVenafiOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiPtrOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafi) *IssuerSpecVenafiCloud {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(IssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiPtrOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafi) *IssuerSpecVenafiTpp {
		if v == nil {
			return nil
		}
		return v.Tpp
	}).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o IssuerSpecVenafiPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafi) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloud struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url *string `pulumi:"url"`
}

// IssuerSpecVenafiCloudInput is an input type that accepts IssuerSpecVenafiCloudArgs and IssuerSpecVenafiCloudOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudInput` via:
//
//          IssuerSpecVenafiCloudArgs{...}
type IssuerSpecVenafiCloudInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput
	ToIssuerSpecVenafiCloudOutputWithContext(context.Context) IssuerSpecVenafiCloudOutput
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudArgs struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRefInput `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (IssuerSpecVenafiCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return i.ToIssuerSpecVenafiCloudOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput)
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput).ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudPtrInput is an input type that accepts IssuerSpecVenafiCloudArgs, IssuerSpecVenafiCloudPtr and IssuerSpecVenafiCloudPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudPtrInput` via:
//
//          IssuerSpecVenafiCloudArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiCloudPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput
	ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudPtrOutput
}

type issuerSpecVenafiCloudPtrType IssuerSpecVenafiCloudArgs

func IssuerSpecVenafiCloudPtr(v *IssuerSpecVenafiCloudArgs) IssuerSpecVenafiCloudPtrInput {	return (*issuerSpecVenafiCloudPtrType)(v)
}

func (*issuerSpecVenafiCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) *IssuerSpecVenafiCloud {
		return &v
	}).(IssuerSpecVenafiCloudPtrOutput)
}
// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o IssuerSpecVenafiCloudOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func (v IssuerSpecVenafiCloud) IssuerSpecVenafiCloudApiTokenSecretRef { return v.ApiTokenSecretRef }).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVenafiCloud) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiCloudPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) Elem() IssuerSpecVenafiCloudOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiCloud) IssuerSpecVenafiCloud { return *v }).(IssuerSpecVenafiCloudOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o IssuerSpecVenafiCloudPtrOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiCloud) *IssuerSpecVenafiCloudApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ApiTokenSecretRef
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiCloud) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVenafiCloudApiTokenSecretRefInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs and IssuerSpecVenafiCloudApiTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefInput` via:
//
//          IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
type IssuerSpecVenafiCloudApiTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVenafiCloudApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput).ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudApiTokenSecretRefPtrInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs, IssuerSpecVenafiCloudApiTokenSecretRefPtr and IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefPtrInput` via:
//
//          IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiCloudApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
}

type issuerSpecVenafiCloudApiTokenSecretRefPtrType IssuerSpecVenafiCloudApiTokenSecretRefArgs

func IssuerSpecVenafiCloudApiTokenSecretRefPtr(v *IssuerSpecVenafiCloudApiTokenSecretRefArgs) IssuerSpecVenafiCloudApiTokenSecretRefPtrInput {	return (*issuerSpecVenafiCloudApiTokenSecretRefPtrType)(v)
}

func (*issuerSpecVenafiCloudApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) *IssuerSpecVenafiCloudApiTokenSecretRef {
		return &v
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}
// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVenafiCloudApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVenafiCloudApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Elem() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiCloudApiTokenSecretRef) IssuerSpecVenafiCloudApiTokenSecretRef { return *v }).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTpp struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle *string `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef IssuerSpecVenafiTppCredentialsRef `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url string `pulumi:"url"`
}

// IssuerSpecVenafiTppInput is an input type that accepts IssuerSpecVenafiTppArgs and IssuerSpecVenafiTppOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppInput` via:
//
//          IssuerSpecVenafiTppArgs{...}
type IssuerSpecVenafiTppInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput
	ToIssuerSpecVenafiTppOutputWithContext(context.Context) IssuerSpecVenafiTppOutput
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppArgs struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef IssuerSpecVenafiTppCredentialsRefInput `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url pulumi.StringInput `pulumi:"url"`
}

func (IssuerSpecVenafiTppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return i.ToIssuerSpecVenafiTppOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput)
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput).ToIssuerSpecVenafiTppPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppPtrInput is an input type that accepts IssuerSpecVenafiTppArgs, IssuerSpecVenafiTppPtr and IssuerSpecVenafiTppPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppPtrInput` via:
//
//          IssuerSpecVenafiTppArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiTppPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput
	ToIssuerSpecVenafiTppPtrOutputWithContext(context.Context) IssuerSpecVenafiTppPtrOutput
}

type issuerSpecVenafiTppPtrType IssuerSpecVenafiTppArgs

func IssuerSpecVenafiTppPtr(v *IssuerSpecVenafiTppArgs) IssuerSpecVenafiTppPtrInput {	return (*issuerSpecVenafiTppPtrType)(v)
}

func (*issuerSpecVenafiTppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiTppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *IssuerSpecVenafiTpp {
		return &v
	}).(IssuerSpecVenafiTppPtrOutput)
}
// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o IssuerSpecVenafiTppOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerSpecVenafiTpp) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o IssuerSpecVenafiTppOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func (v IssuerSpecVenafiTpp) IssuerSpecVenafiTppCredentialsRef { return v.CredentialsRef }).(IssuerSpecVenafiTppCredentialsRefOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVenafiTpp) string { return v.Url }).(pulumi.StringOutput)
}

type IssuerSpecVenafiTppPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiTppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) Elem() IssuerSpecVenafiTppOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiTpp) IssuerSpecVenafiTpp { return *v }).(IssuerSpecVenafiTppOutput)
}

// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o IssuerSpecVenafiTppPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o IssuerSpecVenafiTppPtrOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiTpp) *IssuerSpecVenafiTppCredentialsRef {
		if v == nil {
			return nil
		}
		return &v.CredentialsRef
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRef struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVenafiTppCredentialsRefInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs and IssuerSpecVenafiTppCredentialsRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefInput` via:
//
//          IssuerSpecVenafiTppCredentialsRefArgs{...}
type IssuerSpecVenafiTppCredentialsRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput
	ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefOutput
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRefArgs struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVenafiTppCredentialsRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput)
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput).ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppCredentialsRefPtrInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs, IssuerSpecVenafiTppCredentialsRefPtr and IssuerSpecVenafiTppCredentialsRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefPtrInput` via:
//
//          IssuerSpecVenafiTppCredentialsRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiTppCredentialsRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput
	ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput
}

type issuerSpecVenafiTppCredentialsRefPtrType IssuerSpecVenafiTppCredentialsRefArgs

func IssuerSpecVenafiTppCredentialsRefPtr(v *IssuerSpecVenafiTppCredentialsRefArgs) IssuerSpecVenafiTppCredentialsRefPtrInput {	return (*issuerSpecVenafiTppCredentialsRefPtrType)(v)
}

func (*issuerSpecVenafiTppCredentialsRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRefOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCredentialsRef) *IssuerSpecVenafiTppCredentialsRef {
		return &v
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}
// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerSpecVenafiTppCredentialsRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVenafiTppCredentialsRefPtrOutput struct { *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Elem() IssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiTppCredentialsRef) IssuerSpecVenafiTppCredentialsRef { return *v }).(IssuerSpecVenafiTppCredentialsRefOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerSpecVenafiTppCredentialsRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatus struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme *IssuerStatusAcme `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions []IssuerStatusConditions `pulumi:"conditions"`
}

// IssuerStatusInput is an input type that accepts IssuerStatusArgs and IssuerStatusOutput values.
// You can construct a concrete instance of `IssuerStatusInput` via:
//
//          IssuerStatusArgs{...}
type IssuerStatusInput interface {
	pulumi.Input

	ToIssuerStatusOutput() IssuerStatusOutput
	ToIssuerStatusOutputWithContext(context.Context) IssuerStatusOutput
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusArgs struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme IssuerStatusAcmePtrInput `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions IssuerStatusConditionsArrayInput `pulumi:"conditions"`
}

func (IssuerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (i IssuerStatusArgs) ToIssuerStatusOutput() IssuerStatusOutput {
	return i.ToIssuerStatusOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput)
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput).ToIssuerStatusPtrOutputWithContext(ctx)
}

// IssuerStatusPtrInput is an input type that accepts IssuerStatusArgs, IssuerStatusPtr and IssuerStatusPtrOutput values.
// You can construct a concrete instance of `IssuerStatusPtrInput` via:
//
//          IssuerStatusArgs{...}
//
//  or:
//
//          nil
type IssuerStatusPtrInput interface {
	pulumi.Input

	ToIssuerStatusPtrOutput() IssuerStatusPtrOutput
	ToIssuerStatusPtrOutputWithContext(context.Context) IssuerStatusPtrOutput
}

type issuerStatusPtrType IssuerStatusArgs

func IssuerStatusPtr(v *IssuerStatusArgs) IssuerStatusPtrInput {	return (*issuerStatusPtrType)(v)
}

func (*issuerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusOutput struct { *pulumi.OutputState }

func (IssuerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusOutput) ToIssuerStatusOutput() IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o.ApplyT(func(v IssuerStatus) *IssuerStatus {
		return &v
	}).(IssuerStatusPtrOutput)
}
// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o IssuerStatusOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func (v IssuerStatus) *IssuerStatusAcme { return v.Acme }).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o IssuerStatusOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func (v IssuerStatus) []IssuerStatusConditions { return v.Conditions }).(IssuerStatusConditionsArrayOutput)
}

type IssuerStatusPtrOutput struct { *pulumi.OutputState }

func (IssuerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) Elem() IssuerStatusOutput {
	return o.ApplyT(func (v *IssuerStatus) IssuerStatus { return *v }).(IssuerStatusOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o IssuerStatusPtrOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func (v *IssuerStatus) *IssuerStatusAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o IssuerStatusPtrOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func (v *IssuerStatus) []IssuerStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(IssuerStatusConditionsArrayOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type IssuerStatusAcme struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail *string `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri *string `pulumi:"uri"`
}

// IssuerStatusAcmeInput is an input type that accepts IssuerStatusAcmeArgs and IssuerStatusAcmeOutput values.
// You can construct a concrete instance of `IssuerStatusAcmeInput` via:
//
//          IssuerStatusAcmeArgs{...}
type IssuerStatusAcmeInput interface {
	pulumi.Input

	ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput
	ToIssuerStatusAcmeOutputWithContext(context.Context) IssuerStatusAcmeOutput
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type IssuerStatusAcmeArgs struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail pulumi.StringPtrInput `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (IssuerStatusAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return i.ToIssuerStatusAcmeOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput)
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput).ToIssuerStatusAcmePtrOutputWithContext(ctx)
}

// IssuerStatusAcmePtrInput is an input type that accepts IssuerStatusAcmeArgs, IssuerStatusAcmePtr and IssuerStatusAcmePtrOutput values.
// You can construct a concrete instance of `IssuerStatusAcmePtrInput` via:
//
//          IssuerStatusAcmeArgs{...}
//
//  or:
//
//          nil
type IssuerStatusAcmePtrInput interface {
	pulumi.Input

	ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput
	ToIssuerStatusAcmePtrOutputWithContext(context.Context) IssuerStatusAcmePtrOutput
}

type issuerStatusAcmePtrType IssuerStatusAcmeArgs

func IssuerStatusAcmePtr(v *IssuerStatusAcmeArgs) IssuerStatusAcmePtrInput {	return (*issuerStatusAcmePtrType)(v)
}

func (*issuerStatusAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmePtrOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type IssuerStatusAcmeOutput struct { *pulumi.OutputState }

func (IssuerStatusAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *IssuerStatusAcme {
		return &v
	}).(IssuerStatusAcmePtrOutput)
}
// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o IssuerStatusAcmeOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerStatusAcme) *string { return v.LastRegisteredEmail }).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o IssuerStatusAcmeOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerStatusAcme) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type IssuerStatusAcmePtrOutput struct { *pulumi.OutputState }

func (IssuerStatusAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) Elem() IssuerStatusAcmeOutput {
	return o.ApplyT(func (v *IssuerStatusAcme) IssuerStatusAcme { return *v }).(IssuerStatusAcmeOutput)
}

// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o IssuerStatusAcmePtrOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastRegisteredEmail
	}).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o IssuerStatusAcmePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func (v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message *string `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status string `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type string `pulumi:"type"`
}

// IssuerStatusConditionsInput is an input type that accepts IssuerStatusConditionsArgs and IssuerStatusConditionsOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsInput` via:
//
//          IssuerStatusConditionsArgs{...}
type IssuerStatusConditionsInput interface {
	pulumi.Input

	ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput
	ToIssuerStatusConditionsOutputWithContext(context.Context) IssuerStatusConditionsOutput
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status pulumi.StringInput `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type pulumi.StringInput `pulumi:"type"`
}

func (IssuerStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return i.ToIssuerStatusConditionsOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsOutput)
}

// IssuerStatusConditionsArrayInput is an input type that accepts IssuerStatusConditionsArray and IssuerStatusConditionsArrayOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsArrayInput` via:
//
//          IssuerStatusConditionsArray{ IssuerStatusConditionsArgs{...} }
type IssuerStatusConditionsArrayInput interface {
	pulumi.Input

	ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput
	ToIssuerStatusConditionsArrayOutputWithContext(context.Context) IssuerStatusConditionsArrayOutput
}

type IssuerStatusConditionsArray []IssuerStatusConditionsInput

func (IssuerStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return i.ToIssuerStatusConditionsArrayOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsArrayOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsOutput struct { *pulumi.OutputState }

func (IssuerStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return o
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
func (o IssuerStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last transition, complementing reason.
func (o IssuerStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last transition.
func (o IssuerStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IssuerStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of ('True', 'False', 'Unknown').
func (o IssuerStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of the condition, known values are ('Ready').
func (o IssuerStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v IssuerStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type IssuerStatusConditionsArrayOutput struct { *pulumi.OutputState }

func (IssuerStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) Index(i pulumi.IntInput) IssuerStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IssuerStatusConditions {
		return vs[0].([]IssuerStatusConditions)[vs[1].(int)]
	}).(IssuerStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(IssuerTypeOutput{})
	pulumi.RegisterOutputType(IssuerSpecOutput{})
	pulumi.RegisterOutputType(IssuerSpecPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePrivateKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePrivateKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflarePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01WebhookOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01WebhookPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusOutput{})
	pulumi.RegisterOutputType(IssuerStatusPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmeOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmePtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsArrayOutput{})
}
